{"ast":null,"code":"import firebase from 'firebase';\nimport { EMAIL_CHANGED, PASSWORD_CHANGED, LOGIN_USER_SUCCESS, LOGIN_USER_FAIL, LOGIN_USER, REGISTER_USER_SUCCESS, REGISTER_USER_FAIL, REGISTER_USER } from './types'; // handeling input change\n\nexport var emailChanged = function emailChanged(text) {\n  return {\n    type: EMAIL_CHANGED,\n    payload: text\n  };\n};\nexport var passwordChanged = function passwordChanged(text) {\n  return {\n    type: PASSWORD_CHANGED,\n    payload: text\n  };\n}; //handleing user login\n\nexport var loginUser = function loginUser(email, password) {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN_USER\n    });\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n      return loginUserSuccess(dispatch, user);\n    }).catch(function (error) {\n      return loginUserFail(dispatch, error);\n    });\n  };\n};\n\nvar loginUserFail = function loginUserFail(dispatch, error) {\n  dispatch({\n    type: LOGIN_USER_FAIL,\n    payload: error.message\n  });\n};\n\nvar loginUserSuccess = function loginUserSuccess(dispatch, user) {\n  dispatch({\n    type: LOGIN_USER_SUCCESS,\n    payload: user\n  });\n};\n\nexport var registerUser = function registerUser(email, password) {\n  return function (dispatch) {\n    dispatch({\n      type: REGISTER_USER\n    });\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n      return registerUserSuccess(dispatch, user);\n    }).catch(function (error) {\n      return registerUserFail(dispatch, error);\n    });\n  };\n};\n\nvar registerUserFail = function registerUserFail(dispatch, error) {\n  dispatch({\n    type: REGISTER_USER_FAIL,\n    payload: error.message\n  });\n};\n\nvar registerUserSuccess = function registerUserSuccess(dispatch, user) {\n  dispatch({\n    type: REGISTER_USER_SUCCESS,\n    payload: user\n  });\n};","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/Actions/authAction.js"],"names":["firebase","EMAIL_CHANGED","PASSWORD_CHANGED","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGIN_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","REGISTER_USER","emailChanged","text","type","payload","passwordChanged","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","loginUserSuccess","catch","error","loginUserFail","message","registerUser","createUserWithEmailAndPassword","registerUserSuccess","registerUserFail"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,eAJF,EAKEC,UALF,EAMEC,qBANF,EAOEC,kBAPF,EAQEC,aARF,QASO,SATP,C,CAYA;;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEV,aADD;AAELW,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACH,IAAD,EAAU;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAET,gBADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM,C,CAOP;;AAEA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAAEC,KAAF,EAASC,QAAT,EAAuB;AAC9C,SAAO,UAACC,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AAEAL,IAAAA,QAAQ,CAACkB,IAAT,GAAgBC,0BAAhB,CAA2CJ,KAA3C,EAAkDC,QAAlD,EACGI,IADH,CACQ,UAAAC,IAAI;AAAA,aAAIC,gBAAgB,CAACL,QAAD,EAAWI,IAAX,CAApB;AAAA,KADZ,EAEGE,KAFH,CAES,UAACC,KAAD;AAAA,aAAWC,aAAa,CAACR,QAAD,EAAWO,KAAX,CAAxB;AAAA,KAFT;AAGD,GAND;AAOD,CARM;;AAUP,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACR,QAAD,EAAWO,KAAX,EAAqB;AACzCP,EAAAA,QAAQ,CAAC;AAAEN,IAAAA,IAAI,EAAEP,eAAR;AACCQ,IAAAA,OAAO,EAAEY,KAAK,CAACE;AADhB,GAAD,CAAR;AAGD,CAJD;;AAMA,IAAMJ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACL,QAAD,EAAWI,IAAX,EAAoB;AAC3CJ,EAAAA,QAAQ,CAAC;AACPN,IAAAA,IAAI,EAAER,kBADC;AAEPS,IAAAA,OAAO,EAAES;AAFF,GAAD,CAAR;AAKD,CAND;;AAQA,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACZ,KAAD,EAAQC,QAAR,EAAsB;AAChD,SAAO,UAACC,QAAD,EAAc;AAEnBA,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAEH;AAAR,KAAD,CAAR;AAEAR,IAAAA,QAAQ,CAACkB,IAAT,GAAgBU,8BAAhB,CAA+Cb,KAA/C,EAAsDC,QAAtD,EACOI,IADP,CACY,UAAAC,IAAI;AAAA,aAAIQ,mBAAmB,CAACZ,QAAD,EAAWI,IAAX,CAAvB;AAAA,KADhB,EAEOE,KAFP,CAEa,UAACC,KAAD;AAAA,aAAWM,gBAAgB,CAACb,QAAD,EAAUO,KAAV,CAA3B;AAAA,KAFb;AAGD,GAPD;AAQD,CATM;;AAWP,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACb,QAAD,EAAWO,KAAX,EAAqB;AAC5CP,EAAAA,QAAQ,CAAC;AAAEN,IAAAA,IAAI,EAAEJ,kBAAR;AACEK,IAAAA,OAAO,EAAEY,KAAK,CAACE;AADjB,GAAD,CAAR;AAGD,CAJD;;AAMA,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACZ,QAAD,EAAWI,IAAX,EAAoB;AAC9CJ,EAAAA,QAAQ,CAAC;AACPN,IAAAA,IAAI,EAAEL,qBADC;AAEPM,IAAAA,OAAO,EAAES;AAFF,GAAD,CAAR;AAID,CALD","sourcesContent":["import firebase from 'firebase';\nimport {\n  EMAIL_CHANGED,\n  PASSWORD_CHANGED,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_FAIL,\n  LOGIN_USER,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAIL,\n  REGISTER_USER,\n} from './types';\n\n\n// handeling input change\n\nexport const emailChanged = (text) => {\n  return {\n    type: EMAIL_CHANGED,\n    payload: text\n  };\n};\n\nexport const passwordChanged = (text) => {\n  return {\n    type: PASSWORD_CHANGED,\n    payload: text\n  };\n};\n\n//handleing user login\n\nexport const loginUser = ( email, password ) => {\n  return (dispatch) => {\n    dispatch({ type: LOGIN_USER });\n\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(user => loginUserSuccess(dispatch, user))\n      .catch((error) => loginUserFail(dispatch, error));\n  };\n};\n\nconst loginUserFail = (dispatch, error) => {\n  dispatch({ type: LOGIN_USER_FAIL,\n            payload: error.message\n   });\n};\n\nconst loginUserSuccess = (dispatch, user) => {\n  dispatch({\n    type: LOGIN_USER_SUCCESS,\n    payload: user\n  });\n\n};\n\nexport const registerUser = (email, password ) => {\n  return (dispatch) => {\n  \n    dispatch({ type: REGISTER_USER });\n\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n          .then(user => registerUserSuccess(dispatch, user))\n          .catch((error) => registerUserFail(dispatch,error));\n  };\n};\n\nconst registerUserFail = (dispatch, error) => {\n  dispatch({ type: REGISTER_USER_FAIL,\n             payload: error.message\n  });\n};\n\nconst registerUserSuccess = (dispatch, user) => {\n  dispatch({ \n    type: REGISTER_USER_SUCCESS,\n    payload: user\n   });  \n};"]},"metadata":{},"sourceType":"module"}