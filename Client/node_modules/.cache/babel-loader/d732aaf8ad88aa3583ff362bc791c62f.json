{"ast":null,"code":"import _classCallCheck from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/weston/Documents/movedb/Client/src/components/Common/coverItems.js\";\nimport React, { Component } from 'react';\nimport { Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport '../../style.scss';\n\nvar CoverItems =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CoverItems, _Component);\n\n  function CoverItems(props) {\n    var _this;\n\n    _classCallCheck(this, CoverItems);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CoverItems).call(this, props));\n    _this.state = {\n      imageUrl: 'https://image.tmdb.org/t/p/w500'\n    };\n    return _this;\n  }\n\n  _createClass(CoverItems, [{\n    key: \"render\",\n    value: function render() {\n      var imageUrl = this.state.imageUrl;\n      var results = [];\n\n      for (var i = 0; i < this.props.data.length; i++) {\n        // to show or not to show the overlay\n        var movieOverlay = this.props.overlay ? React.createElement(CardContent, {\n          className: \"CardOverlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons movieIcon \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"movie\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body1\",\n          className: \"overlayText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, this.props.data[i].title))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n        var tvOverlay = this.props.overlay ? React.createElement(CardContent, {\n          className: \"CardOverlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons tvIcon \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"tv\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body1\",\n          className: \"overlayText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, this.props.data[i].name))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n        var personOverlay = this.props.overlay ? React.createElement(CardContent, {\n          className: \"CardOverlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons personIcon \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"person\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body1\",\n          className: \"overlayText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, this.props.data[i].name))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }); // to display poster or backdrop depending on card size\n\n        var moviePhotoUrl = this.props.data[i].poster_path === null ? React.createElement(\"div\", {\n          className: this.props.cardSize + 'CardMedia',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons iconMedia\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"movie\")) : React.createElement(CardMedia, {\n          className: this.props.cardSize + 'CardMedia',\n          image: this.props.cardSize === 'large' ? imageUrl + this.props.data[i].backdrop_path : imageUrl + this.props.data[i].poster_path,\n          title: this.props.data[i].title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n        var tvPhotoUrl = this.props.data[i].poster_path === null ? React.createElement(\"div\", {\n          className: this.props.cardSize + 'CardMedia',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons iconMedia\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"tv\")) : React.createElement(CardMedia, {\n          className: this.props.cardSize + 'CardMedia',\n          image: this.props.cardSize === ' large' ? imageUrl + this.props.data[i].backdrop_path : imageUrl + this.props.data[i].poster_path,\n          title: this.props.data[i].name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n        var peoplePhotoUrl = this.props.data[i].profile_path === null ? React.createElement(\"div\", {\n          className: this.props.cardSize + 'CardMedia',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons iconMedia\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"person_outline\")) : React.createElement(CardMedia, {\n          className: this.props.cardSize + 'CardMedia',\n          image: imageUrl + this.props.data[i].profile_path,\n          title: this.props.data[i].name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }); // to display photo or loading card \n\n        var moviePhotoDisplay = this.props.data[i].loading ? React.createElement(\"div\", {\n          className: this.props.cardSize + 'CardMedia',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, moviePhotoUrl, movieOverlay);\n        var tvPhotoDisplay = this.props.data[i].loading ? React.createElement(\"div\", {\n          className: this.props.cardSize + 'CardMedia',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, tvPhotoUrl, tvOverlay);\n        var personPhotoDisplay = this.props.data[i].loading ? React.createElement(\"div\", {\n          className: this.props.cardSize + 'CardMedia',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }) : React.createElement(\"fragment\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, peoplePhotoUrl, personOverlay); //putting everything together to display\n\n        switch (this.props.data[i].media_type) {\n          case 'movie':\n            results.push(React.createElement(Card, {\n              key: i,\n              className: this.props.cardSize + 'Card',\n              onClick: this.props.selected.bind(null, this.props.data[i]),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"CardMediaWrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135\n              },\n              __self: this\n            }, moviePhotoDisplay)));\n            break;\n\n          case 'tv':\n            results.push(React.createElement(Card, {\n              key: i,\n              className: this.props.cardSize + 'Card',\n              onClick: this.props.selected.bind(null, this.props.data[i]),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"CardMediaWrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            }, tvPhotoDisplay)));\n            break;\n\n          case 'person':\n            results.push(React.createElement(Card, {\n              key: i,\n              className: this.props.cardSize + 'Card',\n              onClick: this.props.selected.bind(null, this.props.data[i]),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"CardMediaWrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155\n              },\n              __self: this\n            }, personPhotoDisplay)));\n            break;\n\n          default:\n            results.push('');\n            break;\n        }\n\n        ;\n      }\n\n      return React.createElement(\"div\", {\n        className: this.props.styleProp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \" >\", results);\n    }\n  }]);\n\n  return CoverItems;\n}(Component);\n\nexport default CoverItems;","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/components/Common/coverItems.js"],"names":["React","Component","Card","CardMedia","CardContent","Typography","CoverItems","props","state","imageUrl","results","i","data","length","movieOverlay","overlay","title","tvOverlay","name","personOverlay","moviePhotoUrl","poster_path","cardSize","backdrop_path","tvPhotoUrl","peoplePhotoUrl","profile_path","moviePhotoDisplay","loading","tvPhotoDisplay","personPhotoDisplay","media_type","push","selected","bind","styleProp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardMedia, CardContent, Typography} from '@material-ui/core';\nimport '../../style.scss';\n\nclass CoverItems extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: 'https://image.tmdb.org/t/p/w500',\n        };\n        \n    }\n\n    \n\n    render() {\n\n\n        const { imageUrl } = this.state\n\n        const results = [];        \n\n        for (var i = 0; i < this.props.data.length; i++) {\n\n            // to show or not to show the overlay\n            const movieOverlay =  (this.props.overlay)?\n                                                <CardContent className='CardOverlay'> \n                                                    <i className=\"material-icons movieIcon \">movie</i>\n                                                    <div>\n                                                        <Typography variant=\"body1\" className='overlayText'>\n                                                            {this.props.data[i].title}\n                                                        </Typography>\n                                                    </div>\n                                                </CardContent>\n                                            :\n                                            <div/>\n\n\n            const tvOverlay = (this.props.overlay)?\n                                            <CardContent className='CardOverlay'> \n                                                <i className=\"material-icons tvIcon \">tv</i>\n                                                <div>\n                                                    <Typography variant=\"body1\" className='overlayText'>\n                                                        {this.props.data[i].name}\n                                                    </Typography>\n                                                </div>\n                                            </CardContent>\n                                        :\n                                        <div/>\n\n\n            const personOverlay = (this.props.overlay)?\n                                            <CardContent className='CardOverlay'> \n                                                <i className=\"material-icons personIcon \">person</i>\n                                                <div>\n                                                    <Typography variant=\"body1\" className='overlayText'>\n                                                        {this.props.data[i].name}\n                                                    </Typography>\n                                                </div>\n                                            </CardContent>\n                                        :\n                                        <div/>\n\n            // to display poster or backdrop depending on card size\n            const moviePhotoUrl = (this.props.data[i].poster_path === null)? \n                                <div className = {this.props.cardSize + 'CardMedia'} >\n                                    <i className=\"material-icons iconMedia\">\n                                        movie\n                                    </i>\n                                </div>\n                            :\n                                <CardMedia\n                                className={this.props.cardSize + 'CardMedia'}\n                                image ={ (this.props.cardSize === 'large')? imageUrl + this.props.data[i].backdrop_path : imageUrl + this.props.data[i].poster_path }\n                                title={this.props.data[i].title}\n                                />;\n\n            const tvPhotoUrl = (this.props.data[i].poster_path === null)? \n                                    <div className = {this.props.cardSize + 'CardMedia'} >\n                                        <i className=\"material-icons iconMedia\">\n                                            tv\n                                        </i>\n                                    </div>\n                                :\n                                    <CardMedia\n                                    className={this.props.cardSize + 'CardMedia'}\n                                    image ={ (this.props.cardSize === ' large')? imageUrl + this.props.data[i].backdrop_path : imageUrl + this.props.data[i].poster_path }\n                                    title={this.props.data[i].name}\n                                     />;\n\n            const peoplePhotoUrl = (this.props.data[i].profile_path === null)? \n                                        <div className = {this.props.cardSize + 'CardMedia'} >\n                                            <i className=\"material-icons iconMedia\">\n                                            person_outline\n                                            </i>\n                                        </div>\n                                    :\n                                    <CardMedia\n                                    className={this.props.cardSize + 'CardMedia'}\n                                    image ={ imageUrl + this.props.data[i].profile_path }\n                                    title={this.props.data[i].name}\n                                    /> ;\n\n\n           \n            // to display photo or loading card \n            const moviePhotoDisplay = (this.props.data[i].loading)?<div className = {this.props.cardSize + 'CardMedia'} />\n                                                                    :\n                                                                    <div>\n                                                                        {moviePhotoUrl}\n                                                                        {movieOverlay}\n                                                                    </div>;\n\n\n            const tvPhotoDisplay = (this.props.data[i].loading)? <div className = {this.props.cardSize + 'CardMedia'} />\n                                                                :\n                                                                <div> \n                                                                    {tvPhotoUrl}\n                                                                    {tvOverlay}\n                                                                </div>;\n\n            const personPhotoDisplay = (this.props.data[i].loading)?   <div className = {this.props.cardSize + 'CardMedia'} />\n                                                                    :\n                                                                        <fragment> \n                                                                            {peoplePhotoUrl}\n                                                                            {personOverlay}\n                                                                        </fragment>;\n\n           //putting everything together to display\n            switch (this.props.data[i].media_type) {\n                case 'movie':\n                    results.push(<Card key={i} className={this.props.cardSize + 'Card'}\n                                               onClick={this.props.selected.bind(null,this.props.data[i])} \n                                               >\n                                    <div className='CardMediaWrapper'>\n                                        {moviePhotoDisplay}\n                                    </div>\n                                </Card> \n                    );\n                    break;\n                case 'tv':\n                    results.push(<Card key={i} className={this.props.cardSize + 'Card'} \n                                            onClick={this.props.selected.bind(null,this.props.data[i])} \n                                            >\n                                    <div className='CardMediaWrapper'>\n                                        {tvPhotoDisplay}\n                                    </div>\n                                </Card> \n                )\n                    break;\n                case 'person':\n                    results.push(<Card key={i} className={this.props.cardSize + 'Card'} \n                                               onClick={this.props.selected.bind(null,this.props.data[i])}\n                                                >\n                                    <div className='CardMediaWrapper'>\n                                        {personPhotoDisplay}\n                                    </div>\n                                </Card> \n                    )\n                    break;\n                default:\n                    results.push('')\n                    break;\n            };\n        }\n\n\n        return (\n<div className = {this.props.styleProp}> >\n\n    {results}\n\n</div>\n\n        );\n    }\n}\n\n\nexport default CoverItems"]},"metadata":{},"sourceType":"module"}