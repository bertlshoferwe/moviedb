{"ast":null,"code":"import _classCallCheck from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/weston/Documents/movedb/Client/src/components/home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { getHomeInfo as _getHomeInfo } from '../Actions';\nimport { Card, CardMedia, CardContent, Typography } from '@material-ui/core';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      imageUrl: 'https://image.tmdb.org/t/p/w500',\n      height: '',\n      width: '',\n      id: '',\n      mediaType: '',\n      // Arrays of cards to send to render\n      Trending_movies: [],\n      Trending_tv: [],\n      Trending: [],\n      Trending_people: []\n    };\n    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_assertThisInitialized(_this));\n    _this.pageNavigate = _this.pageNavigate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.gatherAllInfo();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    } // Update window dimensions\n\n  }, {\n    key: \"updateWindowDimensions\",\n    value: function updateWindowDimensions() {\n      this.setState({\n        Height: window.innerHeight,\n        Width: window.innerWidth\n      });\n    }\n  }, {\n    key: \"gatherAllInfo\",\n    value: function gatherAllInfo() {\n      this.props.getHomeInfo();\n    }\n  }, {\n    key: \"pageNavigate\",\n    value: function pageNavigate(value) {\n      // Directs to correct page based upon selected item\n      switch (value.value.props.mediatype) {\n        case 'movie':\n          this.props.history.push({\n            pathname: \"/movie\",\n            search: \"Id=\".concat(value.value.props.id)\n          });\n          break;\n\n        case 'tv':\n          this.props.history.push({\n            pathname: \"/tv\",\n            search: \"Id=\".concat(value.value.props.id)\n          });\n          break;\n\n        case 'person':\n          this.props.history.push({\n            pathname: \"/person\",\n            search: \"Id=\".concat(value.value.props.id)\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"createCards\",\n    value: function createCards(coming, info, going) {\n      console.log(coming);\n      console.log(info);\n      console.log(going); // for (var i = 0; i < coming.length / 2; i++) {\n      //     switch (info[i].media_type) {\n      //         case 'movie':\n      //                 Trending.push(\n      //                 <Card key={i} className='largeCard'>\n      //                     <div className='CardMediaWrapper'>\n      //                         <CardMedia\n      //                             className='largeCardMedia'\n      //                             image={this.state.imageUrl + this.props.mediaPopular[i].backdrop_path}\n      //                             title={this.props.mediaPopular[i].title}\n      //                         />\n      //                         <CardContent className='CardOverlay'> \n      //                         <i className=\"material-icons movieIcon \">movie</i>\n      //                         <div>\n      //                             <Typography variant=\"body1\" className='overlayText'>\n      //                                 {this.props.mediaPopular[i].title}\n      //                             </Typography>\n      //                         </div>\n      //                         </CardContent>\n      //                     </div>\n      //                 </Card> \n      //             );\n      //             break;\n      //     };\n      // };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.createCards('moviePopular', this.props.moviePopular, 'Trending_movies'); // Setting page title\n\n      document.title = 'Movie Database'; // place to push objects after creation  \n\n      var Trending_movies = [];\n      var Trending_tv = [];\n      var Trending = [];\n      var Trending_people = []; // Laying out cards for popular \n\n      for (var i = 0; i < this.props.mediaPopular.length / 2; i++) {\n        switch (this.props.mediaPopular[i].media_type) {\n          case 'movie':\n            Trending.push(React.createElement(Card, {\n              key: i,\n              className: \"largeCard\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"CardMediaWrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            }, React.createElement(CardMedia, {\n              className: \"largeCardMedia\",\n              image: this.state.imageUrl + this.props.mediaPopular[i].backdrop_path,\n              title: this.props.mediaPopular[i].title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }), React.createElement(CardContent, {\n              className: \"CardOverlay\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"material-icons movieIcon \",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130\n              },\n              __self: this\n            }, \"movie\"), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131\n              },\n              __self: this\n            }, React.createElement(Typography, {\n              variant: \"body1\",\n              className: \"overlayText\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }, this.props.mediaPopular[i].title))))));\n            break;\n\n          case 'tv':\n            Trending.push(React.createElement(Card, {\n              key: i,\n              className: \"largeCard\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 144\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"CardMediaWrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            }, React.createElement(CardMedia, {\n              className: \"largeCardMedia\",\n              image: this.state.imageUrl + this.props.mediaPopular[i].backdrop_path,\n              title: this.props.mediaPopular[i].name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146\n              },\n              __self: this\n            }), React.createElement(CardContent, {\n              className: \"CardOverlay\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 151\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"material-icons tvIcon \",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152\n              },\n              __self: this\n            }, \"tv\"), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 153\n              },\n              __self: this\n            }, React.createElement(Typography, {\n              variant: \"body1\",\n              className: \"overlayText\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 154\n              },\n              __self: this\n            }, this.props.tvPopular[i].name))))));\n            break;\n\n          default:\n            break;\n        }\n\n        ;\n      } // laying out card for movie\n\n\n      for (var k = 0; k < this.props.moviePopular.length; k++) {\n        Trending_movies.push(React.createElement(Card, {\n          key: k,\n          className: \"Card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"CardMediaWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          className: \"CardMedia\",\n          image: this.state.imageUrl + this.props.moviePopular[k].poster_path,\n          title: this.props.moviePopular[k].title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }))));\n      } // laying out card for tv\n\n\n      for (var l = 0; l < this.props.tvPopular.length; l++) {\n        Trending_tv.push(React.createElement(Card, {\n          key: l,\n          className: \"Card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"CardMediaWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          className: \"CardMedia\",\n          image: this.state.imageUrl + this.props.tvPopular[l].poster_path,\n          title: this.props.tvPopular[l].name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }))));\n      } // laying out card for people\n\n\n      for (var j = 0; j < this.props.peoplePopular.length; j++) {\n        Trending_people.push(React.createElement(Card, {\n          key: j,\n          className: \"Card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"CardMediaWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          className: \"CardMedia\",\n          image: this.state.imageUrl + this.props.peoplePopular[j].profile_path,\n          title: this.props.peoplePopular[j].name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }), React.createElement(CardContent, {\n          className: \"CardOverlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons personIcon \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, \"person\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body1\",\n          className: \"overlayText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, this.props.peoplePopular[j].name))))));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slideWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \" \", Trending, \" \")), React.createElement(Typography, {\n        variant: \"h5\",\n        className: \"overlayText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Movies\"), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slideWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \" \", Trending_movies, \" \")), React.createElement(Typography, {\n        variant: \"h5\",\n        className: \"overlayText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Television\"), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slideWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \" \", Trending_tv, \" \")), React.createElement(Typography, {\n        variant: \"h5\",\n        className: \"overlayText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"People\"), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slideWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \" \", Trending_people, \" \")));\n    }\n  }]);\n\n  return Home;\n}(Component); // connections to Redux\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var mediaPopular = state.home.media_popular;\n  var moviePopular = state.home.movie_popular;\n  var tvPopular = state.home.tv_popular;\n  var peoplePopular = state.home.people_popular;\n  return {\n    mediaPopular: mediaPopular,\n    moviePopular: moviePopular,\n    tvPopular: tvPopular,\n    peoplePopular: peoplePopular\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getHomeInfo: function getHomeInfo(data) {\n      return dispatch(_getHomeInfo(data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/components/home.js"],"names":["React","Component","connect","withRouter","getHomeInfo","Card","CardMedia","CardContent","Typography","Home","props","state","imageUrl","height","width","id","mediaType","Trending_movies","Trending_tv","Trending","Trending_people","updateWindowDimensions","bind","pageNavigate","gatherAllInfo","window","addEventListener","removeEventListener","setState","Height","innerHeight","Width","innerWidth","value","mediatype","history","push","pathname","search","coming","info","going","console","log","createCards","moviePopular","document","title","i","mediaPopular","length","media_type","backdrop_path","name","tvPopular","k","poster_path","l","j","peoplePopular","profile_path","mapStateToProps","home","media_popular","movie_popular","tv_popular","people_popular","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router'\nimport { getHomeInfo } from '../Actions';\nimport { Card, CardMedia, CardContent, Typography} from '@material-ui/core';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: 'https://image.tmdb.org/t/p/w500',\n            height: '',\n            width: '',\n            id: '',\n            mediaType: '',\n            // Arrays of cards to send to render\n            Trending_movies: [],\n            Trending_tv: [],\n            Trending: [],\n            Trending_people: [],\n        };\n  \n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n        this.pageNavigate = this.pageNavigate.bind(this)\n    }\n\n\n\n    componentDidMount() { \n        this.gatherAllInfo()\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    // Update window dimensions\n    updateWindowDimensions() {\n        this.setState({\n            Height: window.innerHeight,\n            Width: window.innerWidth\n        });\n    }\n\n    gatherAllInfo(){\n        this.props.getHomeInfo()\n    }\n\n    pageNavigate(value) {\n        // Directs to correct page based upon selected item\n        switch (value.value.props.mediatype) {\n            case 'movie':\n                this.props.history.push({\n                    pathname: `/movie`,\n                    search: `Id=${value.value.props.id}`,\n                })\n                break;\n            case 'tv':\n                this.props.history.push({\n                    pathname: `/tv`,\n                    search: `Id=${value.value.props.id}`,\n                })\n                break;\n            case 'person':\n                this.props.history.push({\n                    pathname: `/person`,\n                    search: `Id=${value.value.props.id}`,\n                })\n\n                break;\n            default:\n                break;\n        }\n    }\n\n    createCards(coming, info, going){\n        console.log( coming )\n        console.log( info )\n        console.log( going )\n        // for (var i = 0; i < coming.length / 2; i++) {\n        //     switch (info[i].media_type) {\n        //         case 'movie':\n        //                 Trending.push(\n        //                 <Card key={i} className='largeCard'>\n        //                     <div className='CardMediaWrapper'>\n        //                         <CardMedia\n        //                             className='largeCardMedia'\n        //                             image={this.state.imageUrl + this.props.mediaPopular[i].backdrop_path}\n        //                             title={this.props.mediaPopular[i].title}\n        //                         />\n        //                         <CardContent className='CardOverlay'> \n        //                         <i className=\"material-icons movieIcon \">movie</i>\n        //                         <div>\n        //                             <Typography variant=\"body1\" className='overlayText'>\n        //                                 {this.props.mediaPopular[i].title}\n        //                             </Typography>\n        //                         </div>\n        //                         </CardContent>\n                                \n        //                     </div>\n        //                 </Card> \n        //             );\n        //             break;\n        //     };\n        // };\n    }\n\n    render() {\n        this.createCards('moviePopular', this.props.moviePopular, 'Trending_movies')\n        // Setting page title\n        document.title = 'Movie Database'\n        // place to push objects after creation  \n        let Trending_movies = []\n        let Trending_tv = []\n        let Trending = []\n        let Trending_people = []\n        // Laying out cards for popular \n        for (var i = 0; i < this.props.mediaPopular.length / 2; i++) {\n            switch (this.props.mediaPopular[i].media_type) {\n                case 'movie':\n                        Trending.push(\n                        <Card key={i} className='largeCard'>\n                            <div className='CardMediaWrapper'>\n                                <CardMedia\n                                    className='largeCardMedia'\n                                    image={this.state.imageUrl + this.props.mediaPopular[i].backdrop_path}\n                                    title={this.props.mediaPopular[i].title}\n                                />\n                                <CardContent className='CardOverlay'> \n                                <i className=\"material-icons movieIcon \">movie</i>\n                                <div>\n                                    <Typography variant=\"body1\" className='overlayText'>\n                                        {this.props.mediaPopular[i].title}\n                                    </Typography>\n                                </div>\n                                </CardContent>\n                                \n                            </div>\n                        </Card> \n                    );\n                    break;\n                case 'tv': \n                        Trending.push(\n                            <Card key={i} className='largeCard'>\n                                <div className='CardMediaWrapper'>\n                                    <CardMedia\n                                        className='largeCardMedia'\n                                        image={this.state.imageUrl + this.props.mediaPopular[i].backdrop_path}\n                                        title={this.props.mediaPopular[i].name}\n                                    />\n                                   <CardContent className='CardOverlay'> \n                                <i className=\"material-icons tvIcon \">tv</i>\n                                <div>\n                                    <Typography variant=\"body1\" className='overlayText'>\n                                        {this.props.tvPopular[i].name}\n                                    </Typography>\n                                </div>\n                                </CardContent>\n                                </div>\n                            </Card> \n                        )\n                    break;  \n                default:\n                    break;\n            };\n        }\n\n // laying out card for movie\n    for (var k = 0; k < this.props.moviePopular.length; k++) {\n        Trending_movies.push(\n            <Card key={k} className='Card'>\n            <div className='CardMediaWrapper'>\n                <CardMedia\n                    className='CardMedia'\n                    image={this.state.imageUrl + this.props.moviePopular[k].poster_path}\n                    title={this.props.moviePopular[k].title}\n                />\n                \n            </div>\n        </Card> \n    );\n    }\n // laying out card for tv\n for (var l = 0; l < this.props.tvPopular.length; l++) {\n    Trending_tv.push(\n        <Card key={l} className='Card'>\n        <div className='CardMediaWrapper'>\n            <CardMedia\n                className='CardMedia'\n                image={this.state.imageUrl + this.props.tvPopular[l].poster_path}\n                title={this.props.tvPopular[l].name}\n            />\n            \n        </div>\n    </Card> \n);\n    }\n\n        // laying out card for people\n        for (var j = 0; j < this.props.peoplePopular.length; j++) {\n                        Trending_people.push(\n                        <Card key={j} className='Card'>\n                            <div className='CardMediaWrapper'>\n                                <CardMedia\n                                    className='CardMedia'\n                                    image={this.state.imageUrl + this.props.peoplePopular[j].profile_path}\n                                    title={this.props.peoplePopular[j].name}\n                                />\n                                <CardContent className='CardOverlay'> \n                                <i className=\"material-icons personIcon \">person</i>\n                                <div>\n                                    <Typography variant=\"body1\" className='overlayText'>\n                                        {this.props.peoplePopular[j].name}\n                                    </Typography>\n                                </div>\n                                </CardContent>\n                            </div>\n                        </Card> \n                    );\n                }\n\n\n        return (\n            <div>\n                <div className = 'slider'>\n                    <div className = 'slideWrapper'> {Trending} </div>\n                </div>\n                <Typography variant=\"h5\" className='overlayText'>\n                    Movies\n                </Typography>\n                <div className = 'slider'>\n                    <div className = 'slideWrapper'> {Trending_movies} </div>\n                </div>\n                <Typography variant=\"h5\" className='overlayText'>\n                    Television\n                </Typography>\n                <div className = 'slider'>\n                    <div className = 'slideWrapper'> {Trending_tv} </div>\n                </div>\n                <Typography variant=\"h5\" className='overlayText'>\n                    People\n                </Typography>\n                <div className = 'slider'>\n                    <div className = 'slideWrapper'> {Trending_people} </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// connections to Redux\nconst mapStateToProps = state => {\n    const mediaPopular = state.home.media_popular\n    const moviePopular = state.home.movie_popular\n    const tvPopular = state.home.tv_popular\n    const peoplePopular = state.home.people_popular\n\n    return { mediaPopular, moviePopular, tvPopular, peoplePopular };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getHomeInfo: (data) => dispatch(getHomeInfo(data)),\n    };\n};\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home))"]},"metadata":{},"sourceType":"module"}