{"ast":null,"code":"import _classCallCheck from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/weston/Documents/movedb/Client/src/components/Common/Header/Header.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { emailChanged as _emailChanged, passwordChanged as _passwordChanged, loginUser as _loginUser, registerUser as _registerUser } from '../../../Actions';\nimport { withRouter } from 'react-router-dom';\nimport { AppBar, Button } from '@material-ui/core';\nimport LoginDialog from './loginDialog';\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n    _this.state = {\n      redirect: false,\n      dialogVisible: false,\n      registerErrorEmail: '',\n      registerErrorPassword: ''\n    };\n    _this.titleClick = _this.titleClick.bind(_assertThisInitialized(_this));\n    _this.dialogToggle = _this.dialogToggle.bind(_assertThisInitialized(_this));\n    _this.onEmailChange = _this.onEmailChange.bind(_assertThisInitialized(_this));\n    _this.onPasswordChange = _this.onPasswordChange.bind(_assertThisInitialized(_this));\n    _this.loginButtonPress = _this.loginButtonPress.bind(_assertThisInitialized(_this));\n    _this.registerButtonPress = _this.registerButtonPress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"dialogToggle\",\n    value: function dialogToggle() {\n      this.setState({\n        dialogVisible: !this.state.dialogVisible\n      });\n    }\n  }, {\n    key: \"titleClick\",\n    value: function titleClick() {\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(e) {\n      this.props.emailChanged(e.target.value);\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(e) {\n      this.props.passwordChanged(e.target.value);\n    }\n  }, {\n    key: \"loginButtonPress\",\n    value: function loginButtonPress() {\n      var _this$props = this.props,\n          email = _this$props.email,\n          password = _this$props.password;\n      this.props.loginUser(email, password);\n    }\n  }, {\n    key: \"registerButtonPress\",\n    value: function registerButtonPress() {\n      var _this$props2 = this.props,\n          email = _this$props2.email,\n          password = _this$props2.password; // if( registerEmailError === '' && registerPasswordError === \"\") {\n      //     this.props.registerUser(email, password);\n      // }\n\n      this.props.registerUser(email, password);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var titleBar = React.createElement(AppBar, {\n        title: \"IMDB\",\n        onTitleClick: this.titleClick,\n        showMenuIconButton: false,\n        zDepth: 1,\n        children: this.props.children,\n        style: {\n          position: 'fixed'\n        },\n        className: 'appBar',\n        iconElementRight: this.props.user === null ? React.createElement(Button, {\n          label: \"LogIn\",\n          onClick: this.dialogToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }) : React.createElement(Button, {\n          label: \"LogOut\",\n          onClick: this.login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, titleBar, React.createElement(LoginDialog, {\n        error: this.props.error,\n        registerErrorEmail: this.state.registerErrorEmail,\n        registerErrorPassword: this.state.registerErrorPassword,\n        dialogToggle: this.dialogToggle,\n        dialogVisible: this.state.dialogVisible,\n        onEmailChange: this.onEmailChange,\n        email: this.props.email,\n        onPasswordChange: this.onPasswordChange,\n        password: this.props.password,\n        loginButtonPress: this.loginButtonPress,\n        registerButtonPress: this.registerButtonPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var user = state.auth.user;\n  var email = state.auth.email;\n  var password = state.auth.password;\n  var error = state.auth.error;\n  var success = state.auth.success;\n  var registerError = state.auth.registerError;\n  var loading = state.auth.loading;\n  var registerEmailError = state.auth.registerEmailError;\n  var registerPasswordError = state.auth.registerPasswordError;\n  return {\n    user: user,\n    email: email,\n    password: password,\n    error: error,\n    success: success,\n    registerError: registerError,\n    loading: loading,\n    registerEmailError: registerEmailError,\n    registerPasswordError: registerPasswordError\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    emailChanged: function emailChanged(text) {\n      return dispatch(_emailChanged(text));\n    },\n    passwordChanged: function passwordChanged(text) {\n      return dispatch(_passwordChanged(text));\n    },\n    loginUser: function loginUser(email, password) {\n      return dispatch(_loginUser(email, password));\n    },\n    registerUser: function registerUser(email, password) {\n      return dispatch(_registerUser(email, password));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/components/Common/Header/Header.js"],"names":["React","Component","connect","emailChanged","passwordChanged","loginUser","registerUser","withRouter","AppBar","Button","LoginDialog","Header","props","state","redirect","dialogVisible","registerErrorEmail","registerErrorPassword","titleClick","bind","dialogToggle","onEmailChange","onPasswordChange","loginButtonPress","registerButtonPress","setState","history","push","e","target","value","email","password","titleBar","children","position","user","login","error","mapStateToProps","auth","success","registerError","loading","registerEmailError","registerPasswordError","mapDispatchToProps","dispatch","text"],"mappings":"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","sourcesContent":["\nimport React, { Component }     from 'react';\nimport { connect }              from 'react-redux';\nimport { emailChanged, passwordChanged, loginUser, registerUser } from'../../../Actions';\nimport {withRouter} from 'react-router-dom';\nimport {AppBar, Button} from '@material-ui/core';\nimport LoginDialog from './loginDialog'\n\n\n\n class Header extends Component{ \n    constructor(props){\n        super(props);\n        this.state={\n            redirect: false,\n            dialogVisible: false,\n            registerErrorEmail: '',\n            registerErrorPassword: '',\n         };\n         this.titleClick = this.titleClick.bind(this)\n         this.dialogToggle = this.dialogToggle.bind(this)\n         this.onEmailChange = this.onEmailChange.bind(this)\n         this.onPasswordChange = this.onPasswordChange.bind(this)\n         this.loginButtonPress = this.loginButtonPress.bind(this)\n         this.registerButtonPress = this.registerButtonPress.bind(this)\n    }\n\ndialogToggle() {\n    this.setState({\n        dialogVisible:!this.state.dialogVisible\n})\n}\ntitleClick() {\n    this.props.history.push('/')\n}\nonEmailChange(e) {\n    this.props.emailChanged(e.target.value);\n}\n\nonPasswordChange(e) {\n    this.props.passwordChanged(e.target.value);\n}\n\nloginButtonPress() {\n    const { email, password } = this.props;\n\n    this.props.loginUser( email, password );\n}\nregisterButtonPress() {\n    const { email, password } = this.props;\n   \n    // if( registerEmailError === '' && registerPasswordError === \"\") {\n    //     this.props.registerUser(email, password);\n    // }\n    \n    this.props.registerUser( email, password ); \n}\n\n    render() {\n        const titleBar = <AppBar \n                            title=\"IMDB\"\n                            onTitleClick={this.titleClick}\n                            showMenuIconButton={false}\n                            zDepth={1}\n                            children={this.props.children}  \n                            style={{position:'fixed'}}\n                            className={'appBar'}\n                            iconElementRight={(this.props.user === null)?<Button label=\"LogIn\" onClick={this.dialogToggle} /> : <Button label=\"LogOut\" onClick={this.login} /> } \n                        />\n    \n        return(\n            <div>\n               {titleBar}\n               \n               <LoginDialog \n                    error={this.props.error}\n                    registerErrorEmail={this.state.registerErrorEmail}\n                    registerErrorPassword={this.state.registerErrorPassword}\n                    dialogToggle={this.dialogToggle} \n                    dialogVisible={this.state.dialogVisible} \n                    onEmailChange={this.onEmailChange}\n                    email={this.props.email}\n                    onPasswordChange={this.onPasswordChange}\n                    password={this.props.password}\n                    loginButtonPress={this.loginButtonPress}\n                    registerButtonPress={this.registerButtonPress}\n                />\n            </div>\n\n        );\n    }\n}\nconst mapStateToProps = state => {\n    const user = state.auth.user;\n    const email = state.auth.email;\n    const password = state.auth.password;\n    const error = state.auth.error;\n    const success = state.auth.success;\n    const registerError = state.auth.registerError;\n    const loading = state.auth.loading;\n    const registerEmailError = state.auth.registerEmailError;\n    const registerPasswordError = state.auth.registerPasswordError;\n\n        return{ user, email, password, error, success, registerError, loading, registerEmailError, registerPasswordError };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        emailChanged:(text) => dispatch(emailChanged(text)), \n        passwordChanged:(text) => dispatch(passwordChanged(text)),\n        loginUser:(email, password) => dispatch(loginUser(email, password)),\n        registerUser:(email, password) => dispatch(registerUser(email, password)),   \n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps )(Header))"]},"metadata":{},"sourceType":"module"}