{"ast":null,"code":"import _defineProperty from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { actionTypes } from './action';\nvar INITIAL_STATE = {\n  movieInfo: {\n    poster_path: '',\n    vote_average: '',\n    title: '',\n    release_date: '',\n    overview: '',\n    total_results: '',\n    reviews: {\n      total_results: 0,\n      results: {\n        0: {\n          author: '',\n          content: ''\n        }\n      }\n    },\n    credits: {\n      cast: {\n        0: {\n          character: '',\n          credit_id: '',\n          id: '',\n          name: '',\n          profile_path: ''\n        }\n      },\n      crew: {\n        name: '',\n        job: ''\n      }\n    },\n    videos: {\n      results: {\n        0: {\n          name: '',\n          key: ''\n        }\n      }\n    }\n  },\n  tvInfo: {\n    poster_path: '',\n    vote_average: '',\n    name: '',\n    first_air_date: '',\n    overview: '',\n    total_results: '',\n    seasons: {\n      0: {\n        air_date: '',\n        episode_count: '',\n        poster_path: '',\n        season_number: ''\n      }\n    },\n    credits: {\n      cast: {\n        0: {\n          character: '',\n          credit_id: '',\n          id: '',\n          name: '',\n          profile_path: ''\n        }\n      },\n      crew: {\n        name: '',\n        job: ''\n      }\n    },\n    videos: {\n      results: {\n        0: {\n          name: '',\n          key: ''\n        }\n      }\n    }\n  },\n  peopleInfo: {\n    profile_path: '',\n    name: '',\n    birthday: '',\n    biography: '',\n    place_of_birth: ''\n  },\n  error: '',\n  loading: true\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.INFOLOADING:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    case actionTypes.MOVIEINFO:\n      return _objectSpread({}, state, {\n        movieInfo: action.payload,\n        loading: true\n      });\n\n    case actionTypes.TVINFO:\n      return _objectSpread({}, state, {\n        tvInfo: action.payload,\n        loading: true\n      });\n\n    case actionTypes.PEOPLEINFO:\n      return _objectSpread({}, state, {\n        peopleInfo: action.payload,\n        loading: true\n      });\n\n    case actionTypes.ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/Reducers/apiMedia/mediaInfo.js/reducer.js"],"names":["actionTypes","INITIAL_STATE","movieInfo","poster_path","vote_average","title","release_date","overview","total_results","reviews","results","author","content","credits","cast","character","credit_id","id","name","profile_path","crew","job","videos","key","tvInfo","first_air_date","seasons","air_date","episode_count","season_number","peopleInfo","birthday","biography","place_of_birth","error","loading","state","action","type","INFOLOADING","MOVIEINFO","payload","TVINFO","PEOPLEINFO","ERROR"],"mappings":"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","sourcesContent":["import { actionTypes }  from './action'\n\nconst INITIAL_STATE =  {\n    movieInfo: {\n        poster_path:'',\n        vote_average:'',\n        title:'',\n        release_date:'',\n        overview:'',\n        total_results:'',\n        reviews:{\n            total_results:0,\n            results:{\n                0:{\n                    author:'',\n                    content:''\n                }\n            },\n        },\n        credits:{\n            cast:{\n                0:{\n                    character: '',\n                    credit_id: '',\n                    id: '',\n                    name: '',\n                    profile_path: ''\n                    }\n                },\n            crew:{\n                name:'',\n                job:''\n            }\n            },\n        videos:{\n            results:{\n                0:{\n                    name:'',\n                    key:'',\n                }\n            }\n        },\n    },\n    tvInfo: {\n        poster_path:'',\n        vote_average:'',\n        name:'',\n        first_air_date:'',\n        overview:'',\n        total_results:'',\n        seasons: {\n            0:{\n                air_date:'',\n                episode_count:'',\n                poster_path:'',\n                season_number:''\n            }\n        },\n        credits:{\n            cast:{\n                0:{\n                    character: '',\n                    credit_id: '',\n                    id: '',\n                    name: '',\n                    profile_path: ''\n                    }\n                },\n            crew:{\n                name:'',\n                job:''\n            }\n            },\n            videos:{\n                results:{\n                    0:{\n                        name:'',\n                        key:'',\n                    }\n                }\n            },\n        },\n    peopleInfo:{\n        profile_path: '',\n        name:'',\n        birthday: '',\n        biography:'',\n        place_of_birth: ''\n    },\n    error: '',\n    loading:true,\n};\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type){\n        case actionTypes.INFOLOADING:\n            return{ ...state, loading: false}\n        case actionTypes.MOVIEINFO:\n            return{ ...state, movieInfo: action.payload, loading: true }\n        case actionTypes.TVINFO:\n            return{ ...state, tvInfo: action.payload, loading: true}\n        case actionTypes.PEOPLEINFO:\n            return { ...state, peopleInfo: action.payload, loading:true }\n        case actionTypes.ERROR:\n            return{ ...state, error: action.payload }\n        default:\n         return state;\n    } \n    \n};"]},"metadata":{},"sourceType":"module"}