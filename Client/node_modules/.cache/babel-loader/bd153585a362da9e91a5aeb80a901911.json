{"ast":null,"code":"import _classCallCheck from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/weston/Documents/movedb/Client/src/pages/Home/home.js\";\nimport React, { Component, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { getHomeInfo as _getHomeInfo, MovieTrailer as _MovieTrailer, TvTrailer as _TvTrailer, pageNav as _pageNav } from '../../Reducers';\nimport { Typography } from '@material-ui/core';\nimport './home.scss';\nvar CoverItems = lazy(function () {\n  return import('../../components/coverItems/coverItems');\n});\nvar BackgroundImage = lazy(function () {\n  return import('../../components/backgroundImage/backgroundImage');\n});\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      imageUrl: 'https://image.tmdb.org/t/p/w500',\n      height: '',\n      width: '',\n      id: '',\n      mediaType: ''\n    };\n    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_assertThisInitialized(_this));\n    _this.pageNavigate = _this.pageNavigate.bind(_assertThisInitialized(_this));\n    _this.openTrailer = _this.openTrailer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.gatherAllInfo();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    } // Update window dimensions\n\n  }, {\n    key: \"updateWindowDimensions\",\n    value: function updateWindowDimensions() {\n      this.setState({\n        Height: window.innerHeight,\n        Width: window.innerWidth\n      });\n    }\n  }, {\n    key: \"gatherAllInfo\",\n    value: function gatherAllInfo() {\n      this.props.getHomeInfo();\n    }\n  }, {\n    key: \"openTrailer\",\n    value: function openTrailer(info) {\n      switch (info.media_type) {\n        case 'movie':\n          this.props.MovieTrailer(info.id);\n          break;\n\n        case 'tv':\n          this.props.TvTrailer(info.id);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"pageNavigate\",\n    value: function pageNavigate(info) {\n      // Directs to correct page based upon selected item\n      this.props.pageNav(info);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Setting page title\n      document.title = 'Movie Database'; //setting up how page will display\n\n      var displayPage = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Suspense, {\n        fallback: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Loading...\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(BackgroundImage, {\n        data: this.props.mediaPopular,\n        selected: this.pageNavigate,\n        trailerSelect: this.openTrailer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(Suspense, {\n        fallback: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Loading...\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"lowerHomePage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        className: \"overlayText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Movies\"), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(CoverItems, {\n        data: this.props.moviePopular,\n        overlay: false,\n        styleProp: 'slideWrapper',\n        selected: this.pageNavigate,\n        cardSize: '',\n        isImageLoaded: this.isImageLoaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h5\",\n        className: \"overlayText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Television\"), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(CoverItems, {\n        data: this.props.tvPopular,\n        overlay: false,\n        styleProp: 'slideWrapper',\n        selected: this.pageNavigate,\n        cardSize: '',\n        isImageLoaded: this.isImageLoaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h5\",\n        className: \"overlayText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"People\"), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(CoverItems, {\n        data: this.props.peoplePopular,\n        overlay: true,\n        styleProp: 'slideWrapper',\n        selected: this.pageNavigate,\n        cardSize: 'large',\n        isImageLoaded: this.isImageLoaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })))));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, displayPage);\n    }\n  }]);\n\n  return Home;\n}(Component); // connections to Redux\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var mediaPopular = state.home.media_popular;\n  var moviePopular = state.home.movie_popular;\n  var tvPopular = state.home.tv_popular;\n  var peoplePopular = state.home.people_popular;\n  var movieTrailer = state.trailers.movieTrailer;\n  return {\n    mediaPopular: mediaPopular,\n    moviePopular: moviePopular,\n    tvPopular: tvPopular,\n    peoplePopular: peoplePopular,\n    movieTrailer: movieTrailer\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getHomeInfo: function getHomeInfo(data) {\n      return dispatch(_getHomeInfo(data));\n    },\n    MovieTrailer: function MovieTrailer(data) {\n      return dispatch(_MovieTrailer(data));\n    },\n    TvTrailer: function TvTrailer(data) {\n      return dispatch(_TvTrailer(data));\n    },\n    pageNav: function pageNav(data) {\n      return dispatch(_pageNav(data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/pages/Home/home.js"],"names":["React","Component","Suspense","lazy","connect","withRouter","getHomeInfo","MovieTrailer","TvTrailer","pageNav","Typography","CoverItems","BackgroundImage","Home","props","state","imageUrl","height","width","id","mediaType","updateWindowDimensions","bind","pageNavigate","openTrailer","gatherAllInfo","window","addEventListener","removeEventListener","setState","Height","innerHeight","Width","innerWidth","info","media_type","document","title","displayPage","mediaPopular","moviePopular","isImageLoaded","tvPopular","peoplePopular","mapStateToProps","home","media_popular","movie_popular","tv_popular","people_popular","movieTrailer","trailers","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router'\nimport { getHomeInfo, MovieTrailer, TvTrailer, pageNav } from '../../Reducers';\nimport { Typography } from '@material-ui/core';\nimport './home.scss'\nconst CoverItems = lazy(() => import('../../components/coverItems/coverItems'));\nconst BackgroundImage = lazy(() => import('../../components/backgroundImage/backgroundImage'));\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: 'https://image.tmdb.org/t/p/w500',\n            height: '',\n            width: '',\n            id: '',\n            mediaType: '',\n        };\n  \n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n        this.pageNavigate = this.pageNavigate.bind(this)\n        this.openTrailer = this.openTrailer.bind(this)\n    }\n\n\n\n    componentDidMount() { \n        this.gatherAllInfo()\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    // Update window dimensions\n    updateWindowDimensions() {\n        this.setState({\n            Height: window.innerHeight,\n            Width: window.innerWidth\n        });\n    }\n\n    gatherAllInfo(){\n        this.props.getHomeInfo();\n        \n    }\n\n    openTrailer(info){\n\n        switch( info.media_type ){\n            case 'movie':\n                this.props.MovieTrailer(info.id)\n                break;\n            \n            case 'tv':\n                this.props.TvTrailer(info.id)\n                break;\n            default:\n                break;\n        }\n    }\n\n    pageNavigate(info) {\n        // Directs to correct page based upon selected item\n        this.props.pageNav(info)\n    }\n\n    \n    \n \n    render() { \n        // Setting page title\n        document.title = 'Movie Database'\n\n        //setting up how page will display\n        const displayPage = <div>\n                                {/* Top Popular packground  */}\n                            <Suspense fallback={<div>Loading...</div>}>\n                                < BackgroundImage \n                                data={this.props.mediaPopular} \n                                selected={this.pageNavigate}\n                                trailerSelect={ this.openTrailer }\n                                />\n                            </Suspense>\n\n                            <Suspense fallback={<div>Loading...</div>}>\n\n                            <div className='lowerHomePage' >    \n                                {/* Movie Slider Display */}\n                                <Typography variant=\"h5\" className='overlayText'>\n                                    Movies\n                                </Typography>\n\n                                <div className = 'slider'>\n                                    <CoverItems data={this.props.moviePopular} \n                                                overlay={false} \n                                                styleProp={'slideWrapper'} \n                                                selected={this.pageNavigate}\n                                                cardSize={''} \n                                                isImageLoaded={this.isImageLoaded}\n                                    /> \n                                </div>\n                                {/* Television Slider Display */}\n                                <Typography variant=\"h5\" className='overlayText'>\n                                    Television\n                                </Typography>\n                                <div className = 'slider'>\n                                    <CoverItems data={this.props.tvPopular} \n                                                overlay={false} \n                                                styleProp={'slideWrapper'} \n                                                selected={this.pageNavigate}\n                                                cardSize={''}  \n                                                isImageLoaded={this.isImageLoaded}\n                                                />\n                                </div>\n                            {/* People Slider Display */}\n                                <Typography variant=\"h5\" className='overlayText'>\n                                    People\n                                </Typography>\n                                <div className = 'slider'>\n                                    <CoverItems data={this.props.peoplePopular} \n                                                overlay={true} \n                                                styleProp={'slideWrapper'} \n                                                selected={this.pageNavigate}\n                                                cardSize={'large'}\n                                                isImageLoaded={this.isImageLoaded}  \n                                                />  \n                                </div> \n                                </div>\n                            </Suspense>\n                            </div>\n       \n        \n        return (\n                <div>\n\n                    {displayPage}\n\n                </div>\n\n\n        );\n    }\n}\n\n// connections to Redux\nconst mapStateToProps = state => {\n    const mediaPopular = state.home.media_popular\n    const moviePopular = state.home.movie_popular\n    const tvPopular = state.home.tv_popular\n    const peoplePopular = state.home.people_popular\n    const movieTrailer = state.trailers.movieTrailer\n\n    return { mediaPopular, moviePopular, tvPopular, peoplePopular, movieTrailer };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getHomeInfo: (data) => dispatch(getHomeInfo(data)),\n        MovieTrailer: (data) => dispatch(MovieTrailer(data)),\n        TvTrailer: (data) => dispatch(TvTrailer(data)),\n        pageNav: (data) => dispatch(pageNav(data)),\n    };\n};\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home))"]},"metadata":{},"sourceType":"module"}