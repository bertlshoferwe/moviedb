{"ast":null,"code":"import firebase from 'firebase';\nexport var actionTypes = {\n  EMAIL_CHANGED: 'email_changed',\n  PASSWORD_CHANGED: 'password_changed',\n  LOGIN_USER_SUCCESS: 'login_user_success',\n  LOGIN_USER_FAIL: 'login_user_fail',\n  LOGIN_USER: 'login_user',\n  REGISTER_USER_SUCCESS: 'register_user_success',\n  REGISTER_USER_FAIL: 'register_user_fail',\n  REGISTER_USER: 'register_user' //Handling user input\n\n};\nexport var emailChanged = function emailChanged(text) {\n  return {\n    type: actionTypes.EMAIL_CHANGED,\n    payload: text\n  };\n};\nexport var passwordChanged = function passwordChanged(text) {\n  return {\n    type: actionTypes.PASSWORD_CHANGED,\n    payload: text\n  };\n}; //handleing user login\n\nexport var loginUser = function loginUser(email, password) {\n  return function (dispatch) {\n    dispatch({\n      type: actionTypes.LOGIN_USER\n    });\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n      return loginUserSuccess(dispatch, user);\n    }).catch(function (error) {\n      return loginUserFail(dispatch, error);\n    });\n  };\n};\n\nvar loginUserFail = function loginUserFail(dispatch, error) {\n  dispatch({\n    type: actionTypes.LOGIN_USER_FAIL,\n    payload: error.message\n  });\n};\n\nvar loginUserSuccess = function loginUserSuccess(dispatch, user) {\n  dispatch({\n    type: actionTypes.LOGIN_USER_SUCCESS,\n    payload: user\n  });\n};\n\nexport var registerUser = function registerUser(email, password) {\n  return function (dispatch) {\n    dispatch({\n      type: actionTypes.REGISTER_USER\n    });\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n      return registerUserSuccess(dispatch, user);\n    }).catch(function (error) {\n      return registerUserFail(dispatch, error);\n    });\n  };\n};\n\nvar registerUserFail = function registerUserFail(dispatch, error) {\n  dispatch({\n    type: actionTypes.REGISTER_USER_FAIL,\n    payload: error.message\n  });\n};\n\nvar registerUserSuccess = function registerUserSuccess(dispatch, user) {\n  dispatch({\n    type: actionTypes.REGISTER_USER_SUCCESS,\n    payload: user\n  });\n};","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/Reducers/firebaseAuth/action.js"],"names":["firebase","actionTypes","EMAIL_CHANGED","PASSWORD_CHANGED","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGIN_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","REGISTER_USER","emailChanged","text","type","payload","passwordChanged","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","loginUserSuccess","catch","error","loginUserFail","message","registerUser","createUserWithEmailAndPassword","registerUserSuccess","registerUserFail"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,aAAa,EAAe,eADL;AAEvBC,EAAAA,gBAAgB,EAAY,kBAFL;AAGvBC,EAAAA,kBAAkB,EAAU,oBAHL;AAIvBC,EAAAA,eAAe,EAAa,iBAJL;AAKvBC,EAAAA,UAAU,EAAkB,YALL;AAMvBC,EAAAA,qBAAqB,EAAO,uBANL;AAOvBC,EAAAA,kBAAkB,EAAU,oBAPL;AAQvBC,EAAAA,aAAa,EAAe,eARL,CAWzB;;AAXyB,CAApB;AAaL,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEX,WAAW,CAACC,aADb;AAELW,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACH,IAAD,EAAU;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEX,WAAW,CAACE,gBADb;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM,C,CAOP;;AAEA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAAEC,KAAF,EAASC,QAAT,EAAuB;AAC9C,SAAO,UAACC,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAEX,WAAW,CAACK;AAApB,KAAD,CAAR;AAEAN,IAAAA,QAAQ,CAACmB,IAAT,GAAgBC,0BAAhB,CAA2CJ,KAA3C,EAAkDC,QAAlD,EACGI,IADH,CACQ,UAAAC,IAAI;AAAA,aAAIC,gBAAgB,CAACL,QAAD,EAAWI,IAAX,CAApB;AAAA,KADZ,EAEGE,KAFH,CAES,UAACC,KAAD;AAAA,aAAWC,aAAa,CAACR,QAAD,EAAWO,KAAX,CAAxB;AAAA,KAFT;AAGD,GAND;AAOD,CARM;;AAUP,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACR,QAAD,EAAWO,KAAX,EAAqB;AACzCP,EAAAA,QAAQ,CAAC;AAAEN,IAAAA,IAAI,EAAEX,WAAW,CAACI,eAApB;AACCQ,IAAAA,OAAO,EAAEY,KAAK,CAACE;AADhB,GAAD,CAAR;AAGD,CAJD;;AAMA,IAAMJ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACL,QAAD,EAAWI,IAAX,EAAoB;AAC3CJ,EAAAA,QAAQ,CAAC;AACPN,IAAAA,IAAI,EAAEX,WAAW,CAACG,kBADX;AAEPS,IAAAA,OAAO,EAAES;AAFF,GAAD,CAAR;AAKD,CAND;;AAQA,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACZ,KAAD,EAAQC,QAAR,EAAsB;AAChD,SAAO,UAACC,QAAD,EAAc;AAEnBA,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAEX,WAAW,CAACQ;AAApB,KAAD,CAAR;AAEAT,IAAAA,QAAQ,CAACmB,IAAT,GAAgBU,8BAAhB,CAA+Cb,KAA/C,EAAsDC,QAAtD,EACOI,IADP,CACY,UAAAC,IAAI;AAAA,aAAIQ,mBAAmB,CAACZ,QAAD,EAAWI,IAAX,CAAvB;AAAA,KADhB,EAEOE,KAFP,CAEa,UAACC,KAAD;AAAA,aAAWM,gBAAgB,CAACb,QAAD,EAAUO,KAAV,CAA3B;AAAA,KAFb;AAGD,GAPD;AAQD,CATM;;AAWP,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACb,QAAD,EAAWO,KAAX,EAAqB;AAC5CP,EAAAA,QAAQ,CAAC;AAAEN,IAAAA,IAAI,EAAEX,WAAW,CAACO,kBAApB;AACEK,IAAAA,OAAO,EAAEY,KAAK,CAACE;AADjB,GAAD,CAAR;AAGD,CAJD;;AAMA,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACZ,QAAD,EAAWI,IAAX,EAAoB;AAC9CJ,EAAAA,QAAQ,CAAC;AACPN,IAAAA,IAAI,EAAEX,WAAW,CAACM,qBADX;AAEPM,IAAAA,OAAO,EAAES;AAFF,GAAD,CAAR;AAID,CALD","sourcesContent":["import firebase from 'firebase'\nexport const actionTypes = {\n    EMAIL_CHANGED             : 'email_changed',\n    PASSWORD_CHANGED          : 'password_changed',\n    LOGIN_USER_SUCCESS        : 'login_user_success',\n    LOGIN_USER_FAIL           : 'login_user_fail',\n    LOGIN_USER                : 'login_user',\n    REGISTER_USER_SUCCESS     : 'register_user_success',\n    REGISTER_USER_FAIL        : 'register_user_fail',\n    REGISTER_USER             : 'register_user',\n  }\n\n  //Handling user input\n\n  export const emailChanged = (text) => {\n    return {\n      type: actionTypes.EMAIL_CHANGED,\n      payload: text\n    };\n  };\n  \n  export const passwordChanged = (text) => {\n    return {\n      type: actionTypes.PASSWORD_CHANGED,\n      payload: text\n    };\n  };\n  \n  //handleing user login\n  \n  export const loginUser = ( email, password ) => {\n    return (dispatch) => {\n      dispatch({ type: actionTypes.LOGIN_USER });\n  \n      firebase.auth().signInWithEmailAndPassword(email, password)\n        .then(user => loginUserSuccess(dispatch, user))\n        .catch((error) => loginUserFail(dispatch, error));\n    };\n  };\n  \n  const loginUserFail = (dispatch, error) => {\n    dispatch({ type: actionTypes.LOGIN_USER_FAIL,\n              payload: error.message\n     });\n  };\n  \n  const loginUserSuccess = (dispatch, user) => {\n    dispatch({\n      type: actionTypes.LOGIN_USER_SUCCESS,\n      payload: user\n    });\n  \n  };\n  \n  export const registerUser = (email, password ) => {\n    return (dispatch) => {\n    \n      dispatch({ type: actionTypes.REGISTER_USER });\n  \n      firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(user => registerUserSuccess(dispatch, user))\n            .catch((error) => registerUserFail(dispatch,error));\n    };\n  };\n  \n  const registerUserFail = (dispatch, error) => {\n    dispatch({ type: actionTypes.REGISTER_USER_FAIL,\n               payload: error.message\n    });\n  };\n  \n  const registerUserSuccess = (dispatch, user) => {\n    dispatch({ \n      type: actionTypes.REGISTER_USER_SUCCESS,\n      payload: user\n     });  \n  };"]},"metadata":{},"sourceType":"module"}