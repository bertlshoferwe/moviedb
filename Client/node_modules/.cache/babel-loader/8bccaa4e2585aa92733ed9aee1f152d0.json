{"ast":null,"code":"import _classCallCheck from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/weston/Documents/movedb/Client/src/components/searchFab/SearchFab.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { searchModalOpen as _searchModalOpen } from '../../Reducers';\nimport { withRouter } from 'react-router-dom';\nimport { Fab, Dialog, DialogContent, TextField } from '@material-ui/core';\nimport './fab.scss';\n\nvar SearchFab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchFab, _Component);\n\n  function SearchFab(props) {\n    var _this;\n\n    _classCallCheck(this, SearchFab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchFab).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(SearchFab, [{\n    key: \"setSearch\",\n    value: function setSearch(value) {\n      this.props.searchModalOpen(value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isOpen = this.props.isOpen;\n      console.log(isOpen);\n      var searchBar = isOpen ? React.createElement(Dialog, {\n        open: isOpen,\n        onClose: this.setSearch(false),\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Email Address\",\n        type: \"email\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"fabloc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        className: \"fab\",\n        onClick: function onClick() {\n          _this2.setSearch(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"search\")), searchBar);\n    }\n  }]);\n\n  return SearchFab;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var isOpen = state.search_Model.isOpen;\n  return {\n    isOpen: isOpen\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    searchModalOpen: function searchModalOpen(data) {\n      return dispatch(_searchModalOpen(data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SearchFab));","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/components/searchFab/SearchFab.js"],"names":["React","Component","connect","searchModalOpen","withRouter","Fab","Dialog","DialogContent","TextField","SearchFab","props","state","value","isOpen","console","log","searchBar","setSearch","mapStateToProps","search_Model","mapDispatchToProps","dispatch","data"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAqC,aAArC;AACA,SAASC,eAAe,IAAfA,gBAAT,QAA+B,gBAA/B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,aAAtB,EAAqCC,SAArC,QAAsD,mBAAtD;AACA,OAAO,YAAP;;IAIOC,S;;;;;AACH,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAW,EAAX;AAFc;AAMjB;;;;8BAEUC,K,EAAQ;AACf,WAAKF,KAAL,CAAWP,eAAX,CAA4BS,KAA5B;AACH;;;6BAEQ;AAAA;;AAAA,UACGC,MADH,GACc,KAAKH,KADnB,CACGG,MADH;AAELC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAMG,SAAS,GAAKH,MAAF,GAAY,oBAAC,MAAD;AACM,QAAA,IAAI,EAAEA,MADZ;AAEM,QAAA,OAAO,EAAG,KAAKI,SAAL,CAAgB,KAAhB,CAFhB;AAGM,2BAAgB,mBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKM,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,MAAM,EAAC,OAFX;AAGI,QAAA,EAAE,EAAC,MAHP;AAII,QAAA,KAAK,EAAC,eAJV;AAKI,QAAA,IAAI,EAAC,OALT;AAMI,QAAA,SAAS,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CALN,CAAZ,GAiBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBhC;AAmBA,aACI;AAAK,QAAA,SAAS,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,OAAO,EAAK,mBAAM;AAAC,UAAA,MAAI,CAACA,SAAL,CAAgB,IAAhB;AAAuB,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,CADH,EAOMD,SAPN,CADJ;AAaH;;;;EAhDoBf,S;;AAkDzB,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAAAP,KAAK,EAAI;AAC7B,MAAME,MAAM,GAAGF,KAAK,CAACQ,YAAN,CAAmBN,MAAlC;AAEI,SAAM;AAAEA,IAAAA,MAAM,EAANA;AAAF,GAAN;AACP,CAJD;;AAMA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAM;AACFlB,IAAAA,eAAe,EAAC,yBAACmB,IAAD;AAAA,aAAUD,QAAQ,CAAElB,gBAAe,CAACmB,IAAD,CAAjB,CAAlB;AAAA;AADd,GAAN;AAGH,CAJD;;AAMA,eAAelB,UAAU,CAACF,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA8CX,SAA9C,CAAD,CAAzB","sourcesContent":["\nimport React, { Component }     from 'react';\nimport { connect }              from 'react-redux';\nimport { searchModalOpen } from'../../Reducers';\nimport {withRouter} from 'react-router-dom';\nimport { Fab, Dialog, DialogContent, TextField } from '@material-ui/core'\nimport './fab.scss'\n\n\n\n class SearchFab extends Component{ \n    constructor(props){\n        super(props);\n        this.state={\n           \n         };\n        \n    }\n\n    setSearch( value ) {\n        this.props.searchModalOpen( value )\n    }\n\n    render() {\n        const { isOpen } = this.props\n        console.log(isOpen)\n        const searchBar = ( isOpen )? <Dialog \n                                            open={isOpen} \n                                            onClose={ this.setSearch( false ) } \n                                            aria-labelledby=\"form-dialog-title\"\n                                            >\n                                            <DialogContent>\n                                            <TextField\n                                                autoFocus\n                                                margin=\"dense\"\n                                                id=\"name\"\n                                                label=\"Email Address\"\n                                                type=\"email\"\n                                                fullWidth\n                                            />\n                                            </DialogContent>\n                                        </Dialog>\n                                    :\n                                        <div></div>\n    \n        return(\n            <div className = 'fabloc'>\n               <Fab className='fab' onClick = { () => {this.setSearch( true )} }>\n                <i className=\"material-icons\">\n                    search\n                </i>\n               </Fab>\n\n                { searchBar }\n\n            </div>\n\n        );\n    }\n}\nconst mapStateToProps = state => {\n    const isOpen = state.search_Model.isOpen;\n\n        return{ isOpen };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        searchModalOpen:(data) => dispatch( searchModalOpen(data)),\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps )(SearchFab))"]},"metadata":{},"sourceType":"module"}