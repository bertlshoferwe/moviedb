{"ast":null,"code":"import { IS_MOVIE_IMAGE_LOADED, IS_TV_IMAGE_LOADED, IS_PERSON_IMAGE_LOADED } from './types';\nexport var ImageLoading = function ImageLoading(mediaType, Location, loaded) {\n  return function (dispatch) {\n    switch (mediaType) {\n      case 'movie':\n        dispatch({\n          type: IS_MOVIE_IMAGE_LOADED,\n          index: Location,\n          payload: loaded\n        });\n        break;\n\n      case 'tv':\n        dispatch({\n          type: IS_TV_IMAGE_LOADED,\n          index: Location,\n          payload: loaded\n        });\n        break;\n\n      case 'person':\n        dispatch({\n          type: IS_PERSON_IMAGE_LOADED,\n          index: Location,\n          payload: loaded\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n};","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/Actions/imageLoading.js"],"names":["IS_MOVIE_IMAGE_LOADED","IS_TV_IMAGE_LOADED","IS_PERSON_IMAGE_LOADED","ImageLoading","mediaType","Location","loaded","dispatch","type","index","payload"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,kBAAhC,EAAoDC,sBAApD,QAAkF,SAAlF;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAEC,SAAF,EAAaC,QAAb,EAAuBC,MAAvB,EAAmC;AAE3D,SAAO,UAACC,QAAD,EAAc;AACjB,YAAQH,SAAR;AACI,WAAK,OAAL;AACIG,QAAAA,QAAQ,CAAC;AACDC,UAAAA,IAAI,EAAER,qBADL;AAEDS,UAAAA,KAAK,EAAEJ,QAFN;AAGDK,UAAAA,OAAO,EAAEJ;AAHR,SAAD,CAAR;AAKA;;AAEJ,WAAK,IAAL;AACIC,QAAAA,QAAQ,CAAC;AACDC,UAAAA,IAAI,EAAEP,kBADL;AAEDQ,UAAAA,KAAK,EAAEJ,QAFN;AAGDK,UAAAA,OAAO,EAAEJ;AAHR,SAAD,CAAR;AAKA;;AAEJ,WAAK,QAAL;AACIC,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEN,sBADD;AAELO,UAAAA,KAAK,EAAEJ,QAFF;AAGLK,UAAAA,OAAO,EAAEJ;AAHJ,SAAD,CAAR;AAKA;;AAEJ;AACI;AA1BR;AA4BH,GA7BD;AA8BH,CAhCM","sourcesContent":["import { IS_MOVIE_IMAGE_LOADED, IS_TV_IMAGE_LOADED, IS_PERSON_IMAGE_LOADED } from './types'\n\n\nexport const ImageLoading = ( mediaType, Location, loaded ) => {  \n    \n    return (dispatch) => {\n        switch (mediaType) {\n            case 'movie':\n                dispatch({\n                        type: IS_MOVIE_IMAGE_LOADED,\n                        index: Location,\n                        payload: loaded\n                    })\n                break;\n\n            case 'tv':\n                dispatch({\n                        type: IS_TV_IMAGE_LOADED,\n                        index: Location,\n                        payload: loaded\n                    })\n                break;\n\n            case 'person':\n                dispatch({\n                    type: IS_PERSON_IMAGE_LOADED,\n                    index: Location,\n                    payload: loaded\n                })\n                break;\n\n            default:\n                break;\n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}