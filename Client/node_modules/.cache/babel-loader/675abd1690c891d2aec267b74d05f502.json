{"ast":null,"code":"import _classCallCheck from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/weston/Documents/movedb/Client/src/components/Common/coverItems.js\";\nimport React, { Component } from 'react';\nimport { Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport '../../style.scss';\n\nvar CoverItems =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CoverItems, _Component);\n\n  function CoverItems(props) {\n    var _this;\n\n    _classCallCheck(this, CoverItems);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CoverItems).call(this, props));\n    _this.state = {\n      imageUrl: 'https://image.tmdb.org/t/p/w500'\n    };\n    return _this;\n  }\n\n  _createClass(CoverItems, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var imageUrl = this.state.imageUrl;\n      var results = [];\n\n      var _loop = function _loop() {\n        // to display poster or backdrop depending on card size\n        var moviePhoto = _this2.props.cardSize === 'large' ? _this2.props.data[i].backdrop_path : _this2.props.data[i].poster_path;\n        var tvPhoto = _this2.props.cardSize === ' large' ? _this2.props.data[i].backdrop_path : _this2.props.data[i].poster_path; // to show or not to show the overlay\n\n        var movieOverlay = _this2.props.overlay ? React.createElement(CardContent, {\n          className: \"CardOverlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons movieIcon \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"movie\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body1\",\n          className: \"overlayText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, _this2.props.data[i].title))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n        var tvOverlay = _this2.props.overlay ? React.createElement(CardContent, {\n          className: \"CardOverlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons tvIcon \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"tv\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body1\",\n          className: \"overlayText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, _this2.props.data[i].name))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        });\n        var personOverlay = _this2.props.overlay ? React.createElement(CardContent, {\n          className: \"CardOverlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons personIcon \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"person\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body1\",\n          className: \"overlayText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, _this2.props.data[i].name))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }); //putting everything together to display\n\n        switch (_this2.props.data[i].media_type) {\n          case 'movie':\n            results.push(React.createElement(Card, {\n              key: i,\n              className: _this2.props.cardSize + 'Card',\n              onClick: _this2.props.selected.bind(null, _this2.props.data[i]),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"CardMediaWrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, React.createElement(CardMedia, {\n              className: _this2.props.cardSize + 'CardMedia',\n              image: imageUrl + moviePhoto,\n              title: _this2.props.data[i].title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75\n              },\n              __self: this\n            }), movieOverlay)));\n            break;\n\n          case 'tv':\n            results.push(React.createElement(Card, {\n              key: i,\n              className: _this2.props.cardSize + 'Card',\n              onClick: _this2.props.selected.bind(null, _this2.props.data[i]),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"CardMediaWrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }, React.createElement(CardMedia, {\n              className: _this2.props.cardSize + 'CardMedia',\n              image: imageUrl + tvPhoto,\n              title: _this2.props.data[i].name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }), tvOverlay)));\n            break;\n\n          case 'person':\n            results.push(React.lazy(function () {\n              return React.createElement(Card, {\n                key: i,\n                className: _this2.props.cardSize + 'Card',\n                onClick: _this2.props.selected.bind(null, _this2.props.data[i]),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 102\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"CardMediaWrapper\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 105\n                },\n                __self: this\n              }, React.createElement(CardMedia, {\n                className: _this2.props.cardSize + 'CardMedia',\n                image: imageUrl + _this2.props.data[i].profile_path,\n                title: _this2.props.data[i].name,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 106\n                },\n                __self: this\n              }), personOverlay));\n            }));\n            break;\n\n          default:\n            results.push('');\n            break;\n        }\n\n        ;\n      };\n\n      for (var i = 0; i < this.props.data.length; i++) {\n        _loop();\n      }\n\n      return React.createElement(\"div\", {\n        className: this.props.styleProp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \" >\", results);\n    }\n  }]);\n\n  return CoverItems;\n}(Component);\n\nexport default CoverItems;","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/components/Common/coverItems.js"],"names":["React","Component","Card","CardMedia","CardContent","Typography","CoverItems","props","state","imageUrl","results","moviePhoto","cardSize","data","i","backdrop_path","poster_path","tvPhoto","movieOverlay","overlay","title","tvOverlay","name","personOverlay","media_type","push","selected","bind","lazy","profile_path","length","styleProp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardMedia, CardContent, Typography} from '@material-ui/core';\nimport '../../style.scss';\n\nclass CoverItems extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: 'https://image.tmdb.org/t/p/w500',\n        };\n    }\n\n    render() {\n\n        \n        const { imageUrl } = this.state\n\n        const results = [];        \n\n        for (var i = 0; i < this.props.data.length; i++) {\n\n            // to display poster or backdrop depending on card size\n            const moviePhoto = (this.props.cardSize === 'large')? this.props.data[i].backdrop_path : this.props.data[i].poster_path\n            const tvPhoto = (this.props.cardSize === ' large')? this.props.data[i].backdrop_path : this.props.data[i].poster_path\n\n\n            // to show or not to show the overlay\n            const movieOverlay =  (this.props.overlay)?\n                                                <CardContent className='CardOverlay'> \n                                                    <i className=\"material-icons movieIcon \">movie</i>\n                                                    <div>\n                                                        <Typography variant=\"body1\" className='overlayText'>\n                                                            {this.props.data[i].title}\n                                                        </Typography>\n                                                    </div>\n                                                </CardContent>\n                                            :\n                                            <div/>\n\n\n            const tvOverlay = (this.props.overlay)?\n                                            <CardContent className='CardOverlay'> \n                                                <i className=\"material-icons tvIcon \">tv</i>\n                                                <div>\n                                                    <Typography variant=\"body1\" className='overlayText'>\n                                                        {this.props.data[i].name}\n                                                    </Typography>\n                                                </div>\n                                            </CardContent>\n                                        :\n                                        <div/>\n\n\n            const personOverlay = (this.props.overlay)?\n                                            <CardContent className='CardOverlay'> \n                                                <i className=\"material-icons personIcon \">person</i>\n                                                <div>\n                                                    <Typography variant=\"body1\" className='overlayText'>\n                                                        {this.props.data[i].name}\n                                                    </Typography>\n                                                </div>\n                                            </CardContent>\n                                        :\n                                        <div/>\n           \n           \n           \n           //putting everything together to display\n            switch (this.props.data[i].media_type) {\n                case 'movie':\n                    results.push(<Card key={i} className={this.props.cardSize + 'Card'}\n                                               onClick={this.props.selected.bind(null,this.props.data[i])} \n                                               >\n                                    <div className='CardMediaWrapper'>\n                                        <CardMedia\n                                            className={this.props.cardSize + 'CardMedia'}\n                                            image={imageUrl + moviePhoto}\n                                            title={this.props.data[i].title}\n                                        />\n                                         {movieOverlay}\n                                    </div>\n                                </Card> \n                    );\n                    break;\n                case 'tv':\n                    results.push(<Card key={i} className={this.props.cardSize + 'Card'} \n                                            onClick={this.props.selected.bind(null,this.props.data[i])} \n                                            >\n                                    <div className='CardMediaWrapper'>\n                                        <CardMedia\n                                            className={this.props.cardSize + 'CardMedia'}\n                                            image={imageUrl + tvPhoto}\n                                            title={this.props.data[i].name}\n                                        />\n                                        {tvOverlay}\n                                    </div>\n                                </Card> \n                )\n                    break;\n                case 'person':\n                    results.push(React.lazy(() => (\n                        <Card key={i} className={this.props.cardSize + 'Card'} \n                            onClick={this.props.selected.bind(null,this.props.data[i])}\n                            >\n                            <div className='CardMediaWrapper'>\n                                <CardMedia\n                                    className={this.props.cardSize + 'CardMedia'}\n                                    image={imageUrl + this.props.data[i].profile_path}\n                                    title={this.props.data[i].name}\n                                />\n                                {personOverlay}\n                            </div>\n                        </Card> \n                        )))\n                    break;\n                default:\n                    results.push('')\n                    break;\n            };\n        }\n\n\n        return (\n<div className = {this.props.styleProp}> >\n\n    {results}\n\n</div>\n\n        );\n    }\n}\n\n\nexport default CoverItems"]},"metadata":{},"sourceType":"module"}