{"ast":null,"code":"import { push } from 'connected-react-router';\nexport var actionTypes = {\n  ONSEARCHANGE: 'onsearchange',\n  SEARCHED: 'searched',\n  SEARCHEDNULL: 'searchednull',\n  RESULTS: 'results',\n  UPDATESEARCH: 'updatesearch',\n  ERROR: 'error'\n};\nexport var Search = function Search(Query, Page) {\n  return function (dispatch) {\n    switch (Query) {\n      case '':\n        dispatch({\n          type: actionTypes.SEARCHEDNULL\n        });\n        break;\n\n      default:\n        dispatch({\n          type: actionTypes.SEARCHED,\n          payload: Query\n        });\n        dispatch(query(dispatch, Query, Page));\n        break;\n    }\n  };\n}; // Extention of search function\n\nvar query = function query(dispatch, Query, Page) {\n  var queryString = 'https://api.themoviedb.org/3/search/multi?api_key=04ac5e20700da696a4b482b8e3d1c26e&language=en-US&query=' + Query + '&page=' + Page + '&include_adult=false';\n  return function (dispatch) {\n    fetch(queryString).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      return dispatch({\n        type: actionTypes.ONSEARCHANGE,\n        payload: response.results,\n        page: Page,\n        totalPages: response.total_pages\n      });\n    }).then(function (response) {\n      return setLoading(dispatch);\n    }).catch(function (error) {\n      dispatch({\n        type: actionTypes.ERROR\n      });\n    });\n  };\n};\n\nexport var UpdateSearch = function UpdateSearch(Query, Page) {\n  var queryString = 'https://api.themoviedb.org/3/search/multi?api_key=04ac5e20700da696a4b482b8e3d1c26e&language=en-US&query=' + Query + '&page=' + Page + '&include_adult=false';\n  return function (dispatch) {\n    fetch(queryString).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      return dispatch({\n        type: actionTypes.UPDATESEARCH,\n        payload: response.results,\n        page: response.page,\n        totalPages: response.total_pages\n      });\n    }).then(function (response) {\n      return setLoading(dispatch);\n    }).catch(function (error) {\n      dispatch({\n        type: actionTypes.ERROR\n      });\n    });\n  };\n};\n\nvar setLoading = function setLoading(dispatch) {\n  dispatch({\n    type: actionTypes.LOADING\n  });\n};\n\nexport var resultsOfSearch = function resultsOfSearch(Data) {\n  return function (dispatch) {\n    dispatch({\n      type: actionTypes.RESULTS,\n      payload: Data\n    });\n    dispatch(push('/searchResults'));\n  };\n};","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/Reducers/apiMedia/searchQuery/action.js"],"names":["push","actionTypes","ONSEARCHANGE","SEARCHED","SEARCHEDNULL","RESULTS","UPDATESEARCH","ERROR","Search","Query","Page","dispatch","type","payload","query","queryString","fetch","then","response","json","results","page","totalPages","total_pages","setLoading","catch","error","UpdateSearch","LOADING","resultsOfSearch","Data"],"mappings":"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","sourcesContent":["import {push}                                          from 'connected-react-router'\nexport const actionTypes = {\n    ONSEARCHANGE               : 'onsearchange',\n    SEARCHED                   : 'searched',\n    SEARCHEDNULL               : 'searchednull',\n    RESULTS                    : 'results',\n    UPDATESEARCH               : 'updatesearch',\n    ERROR                       : 'error',\n  }\n\n export const Search = (Query, Page) => {  \n   return (dispatch) => { \n        switch(Query){\n            case '': dispatch ({\n                                type: actionTypes.SEARCHEDNULL,                    \n                        })\n                break;\n            default: dispatch ({\n                                type: actionTypes.SEARCHED,\n                                payload: Query                    \n                        })\n                    dispatch(\n                        query(dispatch, Query, Page)\n                        )\n                break;\n    }\n  };\n};\n// Extention of search function\nconst query = (dispatch, Query, Page) => {\n    const queryString = 'https://api.themoviedb.org/3/search/multi?api_key=04ac5e20700da696a4b482b8e3d1c26e&language=en-US&query=' + Query + '&page=' + Page + '&include_adult=false'\n    return (dispatch) => {\n        \n        fetch(queryString)\n        .then((response) => response.json())\n        .then(response => dispatch({\n                            type: actionTypes.ONSEARCHANGE,\n                            payload: response.results,\n                            page: Page,\n                            totalPages: response.total_pages\n                        }))\n        .then(response => setLoading( dispatch ))\n        .catch( (error) => { dispatch({ type:actionTypes.ERROR }) })\n    };     \n};\n\n\nexport const UpdateSearch = (Query, Page) => { \n    const queryString = 'https://api.themoviedb.org/3/search/multi?api_key=04ac5e20700da696a4b482b8e3d1c26e&language=en-US&query=' + Query + '&page=' + Page + '&include_adult=false' \n    return (dispatch) => {\n        \n        fetch(queryString)\n        .then((response) => response.json())\n        .then(response => dispatch({\n                                type: actionTypes.UPDATESEARCH,\n                                payload: response.results,\n                                page: response.page,\n                                totalPages: response.total_pages,\n                            }))\n        .then(response => setLoading( dispatch )) \n        .catch( (error) => { dispatch({ type:actionTypes.ERROR }) })\n\n    };\n};\n\nconst setLoading = (dispatch) => {\n    dispatch ({ type: actionTypes.LOADING})\n};\n\nexport const resultsOfSearch = (Data) => {\n    return (dispatch) => {\n                     dispatch({\n                            type: actionTypes.RESULTS,\n                            payload: Data\n                        })\n                        dispatch(push('/searchResults'))\n    };     \n};\n"]},"metadata":{},"sourceType":"module"}