{"ast":null,"code":"import _classCallCheck from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/weston/Documents/movedb/Client/src/components/searchFab.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { emailChanged as _emailChanged, passwordChanged as _passwordChanged, loginUser as _loginUser, registerUser as _registerUser } from '../Reducers';\nimport { withRouter } from 'react-router-dom';\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\n\nvar Header2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header2, _Component);\n\n  function Header2(props) {\n    var _this;\n\n    _classCallCheck(this, Header2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header2).call(this, props));\n    _this.state = {\n      redirect: false,\n      dialogVisible: false,\n      registerErrorEmail: '',\n      registerErrorPassword: ''\n    };\n    _this.titleClick = _this.titleClick.bind(_assertThisInitialized(_this));\n    _this.dialogToggle = _this.dialogToggle.bind(_assertThisInitialized(_this));\n    _this.onEmailChange = _this.onEmailChange.bind(_assertThisInitialized(_this));\n    _this.onPasswordChange = _this.onPasswordChange.bind(_assertThisInitialized(_this));\n    _this.loginButtonPress = _this.loginButtonPress.bind(_assertThisInitialized(_this));\n    _this.registerButtonPress = _this.registerButtonPress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Header2, [{\n    key: \"dialogToggle\",\n    value: function dialogToggle() {\n      this.setState({\n        dialogVisible: !this.state.dialogVisible\n      });\n    }\n  }, {\n    key: \"titleClick\",\n    value: function titleClick() {\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(e) {\n      this.props.emailChanged(e.target.value);\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(e) {\n      this.props.passwordChanged(e.target.value);\n    }\n  }, {\n    key: \"loginButtonPress\",\n    value: function loginButtonPress() {\n      var _this$props = this.props,\n          email = _this$props.email,\n          password = _this$props.password;\n      this.props.loginUser(email, password);\n    }\n  }, {\n    key: \"registerButtonPress\",\n    value: function registerButtonPress() {\n      var _this$props2 = this.props,\n          email = _this$props2.email,\n          password = _this$props2.password; // if( registerEmailError === '' && registerPasswordError === \"\") {\n      //     this.props.registerUser(email, password);\n      // }\n\n      this.props.registerUser(email, password);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const loginButton = (this.props.user === null)?\n      //     <Button label=\"LogIn\" onClick={this.dialogToggle} /> \n      //     :\n      //     <Button label=\"LogOut\" onClick={this.login}/>\n      var titleBar = React.createElement(AppBar, {\n        className: \"appBar\",\n        position: \"fixed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: \"toolBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        onClick: this.titleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"MovieDB\"), React.createElement(Button, {\n        variant: \"contained\",\n        onClick: this.dialogToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Default\"))); //<AppBar \n      //                     // title=\"IMDB\"\n      //                     className='header'\n      //                     // onTitleClick={this.titleClick}\n      //                     // showMenuIconButton={false}\n      //                     zDepth={1}\n      //                     // children={this.props.children}  \n      //                     // position=\"fixed\"\n      //                     // iconElementRight={(this.props.user === null)?<Button label=\"LogIn\" onClick={this.dialogToggle} /> : <Button label=\"LogOut\" onClick={this.login} /> } \n      //                 >\n      //                     Helllo\n      //                 </ AppBar>\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, titleBar);\n    }\n  }]);\n\n  return Header2;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var user = state.auth.user;\n  var email = state.auth.email;\n  var password = state.auth.password;\n  var error = state.auth.error;\n  var success = state.auth.success;\n  var registerError = state.auth.registerError;\n  var loading = state.auth.loading;\n  var registerEmailError = state.auth.registerEmailError;\n  var registerPasswordError = state.auth.registerPasswordError;\n  return {\n    user: user,\n    email: email,\n    password: password,\n    error: error,\n    success: success,\n    registerError: registerError,\n    loading: loading,\n    registerEmailError: registerEmailError,\n    registerPasswordError: registerPasswordError\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    emailChanged: function emailChanged(text) {\n      return dispatch(_emailChanged(text));\n    },\n    passwordChanged: function passwordChanged(text) {\n      return dispatch(_passwordChanged(text));\n    },\n    loginUser: function loginUser(email, password) {\n      return dispatch(_loginUser(email, password));\n    },\n    registerUser: function registerUser(email, password) {\n      return dispatch(_registerUser(email, password));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header2));","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/components/searchFab.js"],"names":["React","Component","connect","emailChanged","passwordChanged","loginUser","registerUser","withRouter","AppBar","Toolbar","Typography","Button","Header2","props","state","redirect","dialogVisible","registerErrorEmail","registerErrorPassword","titleClick","bind","dialogToggle","onEmailChange","onPasswordChange","loginButtonPress","registerButtonPress","setState","history","push","e","target","value","email","password","titleBar","mapStateToProps","user","auth","error","success","registerError","loading","registerEmailError","registerPasswordError","mapDispatchToProps","dispatch","text"],"mappings":"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","sourcesContent":["\nimport React, { Component }     from 'react';\nimport { connect }              from 'react-redux';\nimport { emailChanged, passwordChanged, loginUser, registerUser } from'../Reducers';\nimport {withRouter} from 'react-router-dom';\nimport { AppBar, Toolbar, Typography, Button} from '@material-ui/core'\n\n\n\n class Header2 extends Component{ \n    constructor(props){\n        super(props);\n        this.state={\n            redirect: false,\n            dialogVisible: false,\n            registerErrorEmail: '',\n            registerErrorPassword: '',\n         };\n         this.titleClick = this.titleClick.bind(this)\n         this.dialogToggle = this.dialogToggle.bind(this)\n         this.onEmailChange = this.onEmailChange.bind(this)\n         this.onPasswordChange = this.onPasswordChange.bind(this)\n         this.loginButtonPress = this.loginButtonPress.bind(this)\n         this.registerButtonPress = this.registerButtonPress.bind(this)\n    }\n\ndialogToggle() {\n    this.setState({\n        dialogVisible:!this.state.dialogVisible\n})\n}\ntitleClick() {\n    this.props.history.push('/')\n}\nonEmailChange(e) {\n    this.props.emailChanged(e.target.value);\n}\n\nonPasswordChange(e) {\n    this.props.passwordChanged(e.target.value);\n}\n\nloginButtonPress() {\n    const { email, password } = this.props;\n\n    this.props.loginUser( email, password );\n}\nregisterButtonPress() {\n    const { email, password } = this.props;\n   \n    // if( registerEmailError === '' && registerPasswordError === \"\") {\n    //     this.props.registerUser(email, password);\n    // }\n    \n    this.props.registerUser( email, password ); \n}\n\n    render() {\n\n        // const loginButton = (this.props.user === null)?\n        //     <Button label=\"LogIn\" onClick={this.dialogToggle} /> \n        //     :\n        //     <Button label=\"LogOut\" onClick={this.login}/>\n\n        const titleBar = <AppBar className='appBar' position=\"fixed\">\n                            <Toolbar className='toolBar'>\n                                \n                                    <Typography variant=\"h5\" onClick={this.titleClick}>\n                                        MovieDB\n                                    </Typography>\n                                   \n                                    <Button variant=\"contained\" onClick={this.dialogToggle}>\n                                        Default\n                                    </Button>\n                                \n                            </Toolbar>\n                            </AppBar>\n        //<AppBar \n        //                     // title=\"IMDB\"\n        //                     className='header'\n        //                     // onTitleClick={this.titleClick}\n        //                     // showMenuIconButton={false}\n        //                     zDepth={1}\n        //                     // children={this.props.children}  \n        //                     // position=\"fixed\"\n        //                     // iconElementRight={(this.props.user === null)?<Button label=\"LogIn\" onClick={this.dialogToggle} /> : <Button label=\"LogOut\" onClick={this.login} /> } \n        //                 >\n        //                     Helllo\n        //                 </ AppBar>\n    \n        return(\n            <div>\n               {titleBar}\n               \n               {/* <LoginDialog \n                    error={this.props.error}\n                    registerErrorEmail={this.state.registerErrorEmail}\n                    registerErrorPassword={this.state.registerErrorPassword}\n                    dialogToggle={this.dialogToggle} \n                    dialogVisible={this.state.dialogVisible} \n                    onEmailChange={this.onEmailChange}\n                    email={this.props.email}\n                    onPasswordChange={this.onPasswordChange}\n                    password={this.props.password}\n                    loginButtonPress={this.loginButtonPress}\n                    registerButtonPress={this.registerButtonPress}\n                /> */}\n            </div>\n\n        );\n    }\n}\nconst mapStateToProps = state => {\n    const user = state.auth.user;\n    const email = state.auth.email;\n    const password = state.auth.password;\n    const error = state.auth.error;\n    const success = state.auth.success;\n    const registerError = state.auth.registerError;\n    const loading = state.auth.loading;\n    const registerEmailError = state.auth.registerEmailError;\n    const registerPasswordError = state.auth.registerPasswordError;\n\n        return{ user, email, password, error, success, registerError, loading, registerEmailError, registerPasswordError };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        emailChanged:(text) => dispatch(emailChanged(text)), \n        passwordChanged:(text) => dispatch(passwordChanged(text)),\n        loginUser:(email, password) => dispatch(loginUser(email, password)),\n        registerUser:(email, password) => dispatch(registerUser(email, password)),   \n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps )(Header2))"]},"metadata":{},"sourceType":"module"}