{"ast":null,"code":"import _classCallCheck from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/weston/Documents/movedb/Client/src/components/home.js\";\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { getHomeInfo as _getHomeInfo } from '../Actions';\nimport { Typography } from '@material-ui/core';\nvar CoverItems = React.lazy(function () {\n  return import('./Common/coverItems');\n});\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      imageUrl: 'https://image.tmdb.org/t/p/w500',\n      height: '',\n      width: '',\n      id: '',\n      mediaType: ''\n    };\n    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_assertThisInitialized(_this));\n    _this.pageNavigate = _this.pageNavigate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.gatherAllInfo();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    } // Update window dimensions\n\n  }, {\n    key: \"updateWindowDimensions\",\n    value: function updateWindowDimensions() {\n      this.setState({\n        Height: window.innerHeight,\n        Width: window.innerWidth\n      });\n    }\n  }, {\n    key: \"gatherAllInfo\",\n    value: function gatherAllInfo() {\n      this.props.getHomeInfo();\n    }\n  }, {\n    key: \"pageNavigate\",\n    value: function pageNavigate(info) {\n      // Directs to correct page based upon selected item\n      switch (info.media_type) {\n        case 'movie':\n          this.props.history.push({\n            pathname: \"/movie\",\n            search: \"Id=\".concat(info.id)\n          });\n          break;\n\n        case 'tv':\n          this.props.history.push({\n            pathname: \"/tv\",\n            search: \"Id=\".concat(info.id)\n          });\n          break;\n\n        case 'person':\n          this.props.history.push({\n            pathname: \"/person\",\n            search: \"Id=\".concat(info.id)\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Setting page title\n      document.title = 'Movie Database';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Suspense, {\n        fallback: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Loading...\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(CoverItems, {\n        data: this.props.mediaPopular,\n        overlay: true,\n        styleProp: 'slideWrapper',\n        selected: this.pageNavigate,\n        cardSize: 'large',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h5\",\n        className: \"overlayText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Movies\"), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(CoverItems, {\n        data: this.props.moviePopular,\n        overlay: false,\n        styleProp: 'slideWrapper',\n        selected: this.pageNavigate,\n        cardSize: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h5\",\n        className: \"overlayText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Television\"), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(CoverItems, {\n        data: this.props.tvPopular,\n        overlay: false,\n        styleProp: 'slideWrapper',\n        selected: this.pageNavigate,\n        cardSize: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h5\",\n        className: \"overlayText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"People\"), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(CoverItems, {\n        data: this.props.peoplePopular,\n        overlay: true,\n        styleProp: 'slideWrapper',\n        selected: this.pageNavigate,\n        cardSize: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Home;\n}(Component); // connections to Redux\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var mediaPopular = state.home.media_popular;\n  var moviePopular = state.home.movie_popular;\n  var tvPopular = state.home.tv_popular;\n  var peoplePopular = state.home.people_popular;\n  return {\n    mediaPopular: mediaPopular,\n    moviePopular: moviePopular,\n    tvPopular: tvPopular,\n    peoplePopular: peoplePopular\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getHomeInfo: function getHomeInfo(data) {\n      return dispatch(_getHomeInfo(data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/components/home.js"],"names":["React","Component","Suspense","connect","withRouter","getHomeInfo","Typography","CoverItems","lazy","Home","props","state","imageUrl","height","width","id","mediaType","updateWindowDimensions","bind","pageNavigate","gatherAllInfo","window","addEventListener","removeEventListener","setState","Height","innerHeight","Width","innerWidth","info","media_type","history","push","pathname","search","document","title","mediaPopular","moviePopular","tvPopular","peoplePopular","mapStateToProps","home","media_popular","movie_popular","tv_popular","people_popular","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router'\nimport { getHomeInfo } from '../Actions';\nimport { Typography} from '@material-ui/core';\nconst CoverItems = React.lazy(() => import('./Common/coverItems'));\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: 'https://image.tmdb.org/t/p/w500',\n            height: '',\n            width: '',\n            id: '',\n            mediaType: '',\n        };\n  \n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n        this.pageNavigate = this.pageNavigate.bind(this)\n    }\n\n\n\n    componentDidMount() { \n        this.gatherAllInfo()\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    // Update window dimensions\n    updateWindowDimensions() {\n        this.setState({\n            Height: window.innerHeight,\n            Width: window.innerWidth\n        });\n    }\n\n    gatherAllInfo(){\n        this.props.getHomeInfo()\n    }\n\n    pageNavigate(info) {\n        // Directs to correct page based upon selected item\n        switch (info.media_type) {\n            case 'movie':\n                this.props.history.push({\n                    pathname: `/movie`,\n                    search: `Id=${info.id}`,\n                })\n                break;\n            case 'tv':\n                this.props.history.push({\n                    pathname: `/tv`,\n                    search: `Id=${info.id}`,\n                })\n                break;\n            case 'person':\n                this.props.history.push({\n                    pathname: `/person`,\n                    search: `Id=${info.id}`,\n                }) \n\n                break;\n            default:\n                break;\n        }\n    }\n\n    \n\n    render() {\n        // Setting page title\n        document.title = 'Movie Database'\n\n       \n\n        return (\n            <div>\n                <Suspense fallback={<div>Loading...</div>}/>\n                {/* Top Popular movie carosal */}\n                <div className = 'slider'>\n                     <CoverItems data={this.props.mediaPopular} \n                                 overlay={true} \n                                 styleProp={'slideWrapper'} \n                                 selected={this.pageNavigate}\n                                 cardSize={'large'}\n                     />  \n                </div>\n                {/* Movie Slider Display */}\n                <Typography variant=\"h5\" className='overlayText'>\n                    Movies\n                </Typography>\n\n                <div className = 'slider'>\n                     <CoverItems data={this.props.moviePopular} \n                                 overlay={false} \n                                 styleProp={'slideWrapper'} \n                                 selected={this.pageNavigate}\n                                 cardSize={''} \n                     />  \n                </div>\n                {/* Television Slider Display */}\n                <Typography variant=\"h5\" className='overlayText'>\n                    Television\n                </Typography>\n                <div className = 'slider'>\n                    <CoverItems data={this.props.tvPopular} \n                                overlay={false} \n                                styleProp={'slideWrapper'} \n                                selected={this.pageNavigate}\n                                cardSize={''}  \n                                />  \n                </div>\n            {/* People Slider Display */}\n                <Typography variant=\"h5\" className='overlayText'>\n                    People\n                </Typography>\n                <div className = 'slider'>\n                    <CoverItems data={this.props.peoplePopular} \n                                overlay={true} \n                                styleProp={'slideWrapper'} \n                                selected={this.pageNavigate}\n                                cardSize={''}  \n                                />  \n                </div> \n            </div>\n        );\n    }\n}\n\n// connections to Redux\nconst mapStateToProps = state => {\n    const mediaPopular = state.home.media_popular\n    const moviePopular = state.home.movie_popular\n    const tvPopular = state.home.tv_popular\n    const peoplePopular = state.home.people_popular\n\n    return { mediaPopular, moviePopular, tvPopular, peoplePopular };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getHomeInfo: (data) => dispatch(getHomeInfo(data)),\n    };\n};\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home))"]},"metadata":{},"sourceType":"module"}