{"ast":null,"code":"import _classCallCheck from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/weston/Documents/movedb/Client/src/components/home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { getHomeInfo as _getHomeInfo } from '../Actions';\nimport { Card, CardMedia, CardContent, CardHeader, Typography } from '@material-ui/core';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      imageUrl: 'https://image.tmdb.org/t/p/w500',\n      height: '',\n      width: '',\n      id: '',\n      mediaType: ''\n    };\n    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_assertThisInitialized(_this));\n    _this.pageNavigate = _this.pageNavigate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.gatherAllInfo();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    } // Update window dimensions\n\n  }, {\n    key: \"updateWindowDimensions\",\n    value: function updateWindowDimensions() {\n      this.setState({\n        Height: window.innerHeight,\n        Width: window.innerWidth\n      });\n    }\n  }, {\n    key: \"gatherAllInfo\",\n    value: function gatherAllInfo() {\n      this.props.getHomeInfo();\n    }\n  }, {\n    key: \"pageNavigate\",\n    value: function pageNavigate(value) {\n      // Directs to correct page based upon selected item\n      switch (value.value.props.mediatype) {\n        case 'movie':\n          this.props.history.push({\n            pathname: \"/movie\",\n            search: \"Id=\".concat(value.value.props.id)\n          });\n          break;\n\n        case 'tv':\n          this.props.history.push({\n            pathname: \"/tv\",\n            search: \"Id=\".concat(value.value.props.id)\n          });\n          break;\n\n        case 'person':\n          this.props.history.push({\n            pathname: \"/person\",\n            search: \"Id=\".concat(value.value.props.id)\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Setting page title\n      document.title = 'Movie Database'; // Setting up how content will display\n\n      var Trending_movies = [];\n      var Trending_tv = [];\n      var Trending = [].concat(Trending_movies, Trending_tv);\n      var Trending_people = [];\n      console.log(Trending_movies);\n      console.log(Trending_people);\n      console.log(Trending_tv);\n      console.log(Trending);\n\n      for (var i = 0; i < this.props.mediaPopular.length; i++) {\n        switch (this.props.mediaPopular[i].media_type) {\n          case 'movie':\n            Trending_movies.push(React.createElement(Card, {\n              key: i,\n              className: \"Card\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"CardMediaWrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }, React.createElement(CardMedia, {\n              className: \"CardMedia\",\n              image: this.state.imageUrl + this.props.mediaPopular[i].backdrop_path,\n              title: this.props.mediaPopular[i].title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            }), React.createElement(CardContent, {\n              className: \"CardOverlay\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96\n              },\n              __self: this\n            }, React.createElement(Typography, {\n              variant: \"body1\",\n              className: \"overlayText\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97\n              },\n              __self: this\n            }, this.props.mediaPopular[i].title), React.createElement(Typography, {\n              variant: \"body2\",\n              className: \"overlayText\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }, this.props.mediaPopular[i].release_date)))));\n            break;\n\n          case 'tv':\n            Trending_tv.push(React.createElement(Card, {\n              key: i,\n              className: \"Card\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"CardMediaWrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111\n              },\n              __self: this\n            }, React.createElement(CardMedia, {\n              className: \"CardMedia\",\n              image: this.state.imageUrl + this.props.mediaPopular[i].backdrop_path,\n              title: this.props.mediaPopular[i].name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            }), React.createElement(CardContent, {\n              className: \"CardOverlay\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117\n              },\n              __self: this\n            }, React.createElement(Typography, {\n              variant: \"body1\",\n              className: \"overlayText\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118\n              },\n              __self: this\n            }, this.props.mediaPopular[i].name), React.createElement(Typography, {\n              variant: \"body2\",\n              className: \"overlayText\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 121\n              },\n              __self: this\n            }, this.props.mediaPopular[i].first_air_date)))));\n            break;\n\n          default:\n            break;\n        }\n\n        ;\n      }\n\n      for (var i = 0; i < this.props.peoplePopular.length; i++) {\n        Trending_people.push(React.createElement(Card, {\n          key: i,\n          className: \"Card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"CardMediaWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          className: \"CardMedia\",\n          image: this.state.imageUrl + this.props.peoplePopular[i].backdrop_path,\n          title: this.props.peoplePopular[i].name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }), React.createElement(CardContent, {\n          className: \"CardOverlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body1\",\n          className: \"overlayText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, this.props.peoplePopular[i].name)))));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, Trending, Trending_movies, Trending_tv);\n    }\n  }]);\n\n  return Home;\n}(Component); // connections to Redux\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var mediaPopular = state.home.media_popular;\n  var peoplePopular = state.home.people_popular;\n  return {\n    mediaPopular: mediaPopular,\n    peoplePopular: peoplePopular\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getHomeInfo: function getHomeInfo(data) {\n      return dispatch(_getHomeInfo(data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/components/home.js"],"names":["React","Component","connect","withRouter","getHomeInfo","Card","CardMedia","CardContent","CardHeader","Typography","Home","props","state","imageUrl","height","width","id","mediaType","updateWindowDimensions","bind","pageNavigate","gatherAllInfo","window","addEventListener","removeEventListener","setState","Height","innerHeight","Width","innerWidth","value","mediatype","history","push","pathname","search","document","title","Trending_movies","Trending_tv","Trending","Trending_people","console","log","i","mediaPopular","length","media_type","backdrop_path","release_date","name","first_air_date","peoplePopular","mapStateToProps","home","media_popular","people_popular","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router'\nimport { getHomeInfo } from '../Actions';\nimport { Card, CardMedia, CardContent, CardHeader, Typography} from '@material-ui/core';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: 'https://image.tmdb.org/t/p/w500',\n            height: '',\n            width: '',\n            id: '',\n            mediaType: '',\n        };\n  \n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n        this.pageNavigate = this.pageNavigate.bind(this)\n    }\n\n\n\n    componentDidMount() { \n        this.gatherAllInfo()\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    // Update window dimensions\n    updateWindowDimensions() {\n        this.setState({\n            Height: window.innerHeight,\n            Width: window.innerWidth\n        });\n    }\n\n    gatherAllInfo(){\n        this.props.getHomeInfo()\n    }\n\n    pageNavigate(value) {\n        // Directs to correct page based upon selected item\n        switch (value.value.props.mediatype) {\n            case 'movie':\n                this.props.history.push({\n                    pathname: `/movie`,\n                    search: `Id=${value.value.props.id}`,\n                })\n                break;\n            case 'tv':\n                this.props.history.push({\n                    pathname: `/tv`,\n                    search: `Id=${value.value.props.id}`,\n                })\n                break;\n            case 'person':\n                this.props.history.push({\n                    pathname: `/person`,\n                    search: `Id=${value.value.props.id}`,\n                })\n\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        // Setting page title\n        document.title = 'Movie Database'\n        \n        // Setting up how content will display\n        let Trending_movies = []\n        let Trending_tv = []\n        let Trending = [...Trending_movies, ...Trending_tv]\n        let Trending_people = []\n        console.log(Trending_movies)\n        console.log(Trending_people)\n        console.log(Trending_tv)\n        console.log(Trending)\n        \n        for (var i = 0; i < this.props.mediaPopular.length; i++) {\n            switch (this.props.mediaPopular[i].media_type) {\n                case 'movie':\n                        Trending_movies.push(\n                        <Card key={i} className='Card'>\n                            <div className='CardMediaWrapper'>\n                                <CardMedia\n                                    className='CardMedia'\n                                    image={this.state.imageUrl + this.props.mediaPopular[i].backdrop_path}\n                                    title={this.props.mediaPopular[i].title}\n                                />\n                                <CardContent className='CardOverlay'> \n                                    <Typography variant=\"body1\" className='overlayText'>\n                                        {this.props.mediaPopular[i].title}\n                                    </Typography>\n                                    <Typography variant=\"body2\" className='overlayText'>\n                                        {this.props.mediaPopular[i].release_date}\n                                    </Typography>\n                                </CardContent>\n                            </div>\n                        </Card> \n                    );\n                    break;\n                case 'tv': \n                        Trending_tv.push(\n                            <Card key={i} className='Card'>\n                                <div className='CardMediaWrapper'>\n                                    <CardMedia\n                                        className='CardMedia'\n                                        image={this.state.imageUrl + this.props.mediaPopular[i].backdrop_path}\n                                        title={this.props.mediaPopular[i].name}\n                                    />\n                                    <CardContent className='CardOverlay'> \n                                        <Typography variant=\"body1\" className='overlayText'>\n                                            {this.props.mediaPopular[i].name}\n                                        </Typography>\n                                        <Typography variant=\"body2\" className='overlayText'>\n                                            {this.props.mediaPopular[i].first_air_date}\n                                        </Typography>\n                                    </CardContent>\n                                </div>\n                            </Card> \n                        )\n                    break;\n                default:\n                    break;\n            };\n        }\n\n        for (var i = 0; i < this.props.peoplePopular.length; i++) {\n                        Trending_people.push(\n                        <Card key={i} className='Card'>\n                            <div className='CardMediaWrapper'>\n                                <CardMedia\n                                    className='CardMedia'\n                                    image={this.state.imageUrl + this.props.peoplePopular[i].backdrop_path}\n                                    title={this.props.peoplePopular[i].name}\n                                />\n                                <CardContent className='CardOverlay'> \n                                    <Typography variant=\"body1\" className='overlayText'>\n                                        {this.props.peoplePopular[i].name}\n                                    </Typography>\n                                    {/* <Typography variant=\"body2\" className='overlayText'>\n                                        {this.props.peoplePopular[i].release_date}\n                                    </Typography> */}\n                                </CardContent>\n                            </div>\n                        </Card> \n                    );\n                }\n\n\n        return (\n            <div>\n                {Trending}\n                {Trending_movies}\n                {Trending_tv}\n            </div>\n        );\n    }\n}\n\n// connections to Redux\nconst mapStateToProps = state => {\n    const mediaPopular = state.home.media_popular\n    const peoplePopular = state.home.people_popular\n\n    return { mediaPopular, peoplePopular };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getHomeInfo: (data) => dispatch(getHomeInfo(data)),\n    };\n};\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home))"]},"metadata":{},"sourceType":"module"}