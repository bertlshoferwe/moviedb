{"ast":null,"code":"import _classCallCheck from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/weston/Documents/movedb/Client/src/components/Common/coverItems.js\";\nimport React, { Component } from 'react';\nimport { Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport '../../style.scss';\n\nvar CoverItems =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CoverItems, _Component);\n\n  function CoverItems(props) {\n    var _this;\n\n    _classCallCheck(this, CoverItems);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CoverItems).call(this, props));\n    _this.state = {\n      imageUrl: 'https://image.tmdb.org/t/p/w500',\n      cardSize: '',\n      cardMediaSize: ''\n    };\n    return _this;\n  }\n\n  _createClass(CoverItems, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      switch (this.props.data[i].media_type) {\n        case 'large':\n          this.setState({\n            cardSize: 'largeCard',\n            cardMediaSize: 'largeCardMedia'\n          });\n          break;\n\n        case 'small':\n          this.setState({\n            cardSize: 'Card',\n            cardMediaSize: 'CardMedia'\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          imageUrl = _this$state.imageUrl,\n          cardSize = _this$state.cardSize,\n          cardMediaSize = _this$state.cardMediaSize;\n      var results = [];\n\n      for (var i = 0; i < this.props.data.length; i++) {\n        var movieOverlay = this.props.overlay ? React.createElement(CardContent, {\n          className: \"CardOverlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons movieIcon \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"movie\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body1\",\n          className: \"overlayText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, this.props.data[i].title))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n        var tvOverlay = this.props.overlay ? React.createElement(CardContent, {\n          className: \"CardOverlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons tvIcon \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"tv\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body1\",\n          className: \"overlayText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, this.props.data[i].name))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n        var personOverlay = this.props.overlay ? React.createElement(CardContent, {\n          className: \"CardOverlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons personIcon \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"person\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"body1\",\n          className: \"overlayText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, this.props.data[i].name))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n\n        switch (this.props.data[i].media_type) {\n          case 'movie':\n            results.push(React.createElement(Card, {\n              key: i,\n              className: cardSize,\n              onClick: this.props.selected.bind(null, this.props.data[i]),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"CardMediaWrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }, React.createElement(CardMedia, {\n              className: cardMediaSize,\n              image: imageUrl + this.props.data[i].poster_path,\n              title: this.props.data[i].title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            }), movieOverlay)));\n            break;\n\n          case 'tv':\n            results.push(React.createElement(Card, {\n              key: i,\n              className: cardSize,\n              onClick: this.props.selected.bind(null, this.props.data[i]),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"CardMediaWrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103\n              },\n              __self: this\n            }, React.createElement(CardMedia, {\n              className: cardMediaSize,\n              image: imageUrl + this.props.data[i].poster_path,\n              title: this.props.data[i].name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104\n              },\n              __self: this\n            }), tvOverlay)));\n            break;\n\n          case 'person':\n            results.push(React.createElement(Card, {\n              key: i,\n              className: cardSize,\n              onClick: this.props.selected.bind(null, this.props.data[i]),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"CardMediaWrapper\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            }, React.createElement(CardMedia, {\n              className: cardMediaSize,\n              image: imageUrl + this.props.data[i].profile_path,\n              title: this.props.data[i].name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117\n              },\n              __self: this\n            }), personOverlay)));\n            break;\n\n          default:\n            results.push('');\n            break;\n        }\n\n        ;\n      }\n\n      return React.createElement(\"div\", {\n        className: this.props.styleProp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \" >\", results);\n    }\n  }]);\n\n  return CoverItems;\n}(Component);\n\nexport default CoverItems;","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/components/Common/coverItems.js"],"names":["React","Component","Card","CardMedia","CardContent","Typography","CoverItems","props","state","imageUrl","cardSize","cardMediaSize","data","i","media_type","setState","results","length","movieOverlay","overlay","title","tvOverlay","name","personOverlay","push","selected","bind","poster_path","profile_path","styleProp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardMedia, CardContent, Typography} from '@material-ui/core';\nimport '../../style.scss';\n\nclass CoverItems extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: 'https://image.tmdb.org/t/p/w500',\n            cardSize: '',\n            cardMediaSize:'',\n        };\n    }\ncomponentDidMount(){\n    switch (this.props.data[i].media_type) {\n        case 'large':\n                this.setState({\n                    cardSize: 'largeCard' ,\n                    cardMediaSize: 'largeCardMedia'\n                })\n            break;\n        case 'small':\n            this.setState({\n                cardSize: 'Card',\n                cardMediaSize: 'CardMedia'\n            })\n        break;\n        default:\n\n        break;\n    };\n}\n\n\n    render() {\n\n        \n        const { imageUrl, cardSize, cardMediaSize } = this.state\n\n        const results = [];\n\n        \n\n        for (var i = 0; i < this.props.data.length; i++) {\n\n            const movieOverlay =  (this.props.overlay)?\n                                                <CardContent className='CardOverlay'> \n                                                    <i className=\"material-icons movieIcon \">movie</i>\n                                                    <div>\n                                                        <Typography variant=\"body1\" className='overlayText'>\n                                                            {this.props.data[i].title}\n                                                        </Typography>\n                                                    </div>\n                                                </CardContent>\n                                            :\n                                            <div/>\n\n\n            const tvOverlay = (this.props.overlay)?\n                                            <CardContent className='CardOverlay'> \n                                                <i className=\"material-icons tvIcon \">tv</i>\n                                                <div>\n                                                    <Typography variant=\"body1\" className='overlayText'>\n                                                        {this.props.data[i].name}\n                                                    </Typography>\n                                                </div>\n                                            </CardContent>\n                                        :\n                                        <div/>\n\n\n            const personOverlay = (this.props.overlay)?\n                                            <CardContent className='CardOverlay'> \n                                                <i className=\"material-icons personIcon \">person</i>\n                                                <div>\n                                                    <Typography variant=\"body1\" className='overlayText'>\n                                                        {this.props.data[i].name}\n                                                    </Typography>\n                                                </div>\n                                            </CardContent>\n                                        :\n                                        <div/>\n           \n           \n           \n           \n            switch (this.props.data[i].media_type) {\n                case 'movie':\n                    results.push(<Card key={i} className={cardSize} onClick={this.props.selected.bind(null,this.props.data[i])} >\n                                    <div className='CardMediaWrapper'>\n                                        <CardMedia\n                                            className={cardMediaSize}\n                                            image={imageUrl + this.props.data[i].poster_path}\n                                            title={this.props.data[i].title}\n                                        />\n                                         {movieOverlay}\n                                    </div>\n                                </Card> \n                    );\n                    break;\n                case 'tv':\n                    results.push(<Card key={i} className={cardSize} onClick={this.props.selected.bind(null,this.props.data[i])} >\n                                    <div className='CardMediaWrapper'>\n                                        <CardMedia\n                                            className={cardMediaSize}\n                                            image={imageUrl + this.props.data[i].poster_path}\n                                            title={this.props.data[i].name}\n                                        />\n                                        {tvOverlay}\n                                    </div>\n                                </Card> \n                )\n                    break;\n                case 'person':\n                    results.push(<Card key={i} className={cardSize} onClick={this.props.selected.bind(null,this.props.data[i])} >\n                                    <div className='CardMediaWrapper'>\n                                        <CardMedia\n                                            className={cardMediaSize}\n                                            image={imageUrl + this.props.data[i].profile_path}\n                                            title={this.props.data[i].name}\n                                        />\n                                        {personOverlay}\n                                    </div>\n                                </Card> \n                    )\n                    break;\n                default:\n                    results.push('')\n                    break;\n            };\n        }\n\n\n        return (\n<div className = {this.props.styleProp}> >\n\n    {results}\n\n</div>\n\n        );\n    }\n}\n\n\nexport default CoverItems"]},"metadata":{},"sourceType":"module"}