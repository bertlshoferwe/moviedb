{"ast":null,"code":"import _classCallCheck from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/weston/Documents/movedb/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/weston/Documents/movedb/Client/src/components/searchFab/SearchFab.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { searchModalOpen as _searchModalOpen, searchModalClose as _searchModalClose, updateSearchValue as _updateSearchValue } from '../../Reducers';\nimport { withRouter } from 'react-router-dom';\nimport { Fab, Dialog, DialogContent, TextField, Menu, MenuItem } from '@material-ui/core';\nimport './fab.scss';\n\nvar SearchFab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchFab, _Component);\n\n  function SearchFab(props) {\n    var _this;\n\n    _classCallCheck(this, SearchFab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchFab).call(this, props));\n    _this.state = {};\n    _this.openSearch = _this.openSearch.bind(_assertThisInitialized(_this));\n    _this.closeSearch = _this.closeSearch.bind(_assertThisInitialized(_this));\n    _this.handleSearchChange = _this.handleSearchChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SearchFab, [{\n    key: \"openSearch\",\n    value: function openSearch() {\n      this.props.searchModalOpen();\n    }\n  }, {\n    key: \"closeSearch\",\n    value: function closeSearch() {\n      this.props.searchModalClose();\n    }\n  }, {\n    key: \"handleSearchChange\",\n    value: function handleSearchChange(e) {\n      this.props.updateSearchValue(e.target.value);\n      console.log(e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          searchValue = _this$props.searchValue,\n          searchBarResults = _this$props.searchBarResults;\n      console.log(searchValue);\n      console.log(searchBarResults); // const searchMedia = searchBarResults.map((results) => {\n      //     switch(results.media_type){\n      //         case 'movie':\n      //             return\n      //         break;\n      //         case 'tv':\n      //             return\n      //         break;\n      //         case 'person':\n      //             return\n      //         break;\n      //         default:\n      //         break;\n      //     }\n      // })\n\n      var searchBar = React.createElement(Dialog, {\n        open: isOpen,\n        onClose: function onClose() {\n          _this2.closeSearch();\n        },\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"title\",\n        label: \"Search for some media\",\n        type: \"text\",\n        onChange: this.handleSearchChange,\n        value: searchValue,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })));\n      return React.createElement(\"div\", {\n        className: \"fabloc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        className: \"fab\",\n        onClick: function onClick() {\n          _this2.openSearch();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"search\")), searchBar);\n    }\n  }]);\n\n  return SearchFab;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var isOpen = state.search_Model.isOpen;\n  var searchValue = state.search_Model.searchValue;\n  var searchBarResults = state.search_Model.searchBarResults;\n  return {\n    isOpen: isOpen,\n    searchValue: searchValue,\n    searchBarResults: searchBarResults\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    searchModalOpen: function searchModalOpen(data) {\n      return dispatch(_searchModalOpen(data));\n    },\n    searchModalClose: function searchModalClose(data) {\n      return dispatch(_searchModalClose(data));\n    },\n    updateSearchValue: function updateSearchValue(data) {\n      return dispatch(_updateSearchValue(data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SearchFab));","map":{"version":3,"sources":["/home/weston/Documents/movedb/Client/src/components/searchFab/SearchFab.js"],"names":["React","Component","connect","searchModalOpen","searchModalClose","updateSearchValue","withRouter","Fab","Dialog","DialogContent","TextField","Menu","MenuItem","SearchFab","props","state","openSearch","bind","closeSearch","handleSearchChange","e","target","value","console","log","isOpen","searchValue","searchBarResults","searchBar","mapStateToProps","search_Model","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["\nimport React, { Component }     from 'react';\nimport { connect }              from 'react-redux';\nimport { searchModalOpen, searchModalClose, updateSearchValue } from'../../Reducers';\nimport {withRouter} from 'react-router-dom';\nimport { Fab, Dialog, DialogContent, TextField, Menu, MenuItem } from '@material-ui/core'\nimport './fab.scss'\n\n\n\n class SearchFab extends Component{ \n    constructor(props){\n        super(props);\n        this.state={\n           \n         };\n\n         this.openSearch = this.openSearch.bind(this)\n         this.closeSearch = this.closeSearch.bind(this)\n         this.handleSearchChange = this.handleSearchChange.bind(this)\n        \n    }\n\n    openSearch() {\n        this.props.searchModalOpen()\n    }\n\n    closeSearch() {\n        this.props.searchModalClose()\n    }\n\n    handleSearchChange(e) {\n        this.props.updateSearchValue(e.target.value)\n        console.log(e)\n    }\n\n    render() {\n        const { isOpen, searchValue, searchBarResults } = this.props\n        console.log(searchValue)\n        console.log(searchBarResults)\n\n        // const searchMedia = searchBarResults.map((results) => {\n\n        //     switch(results.media_type){\n        //         case 'movie':\n        //             return\n        //         break;\n\n        //         case 'tv':\n        //             return\n        //         break;\n\n        //         case 'person':\n        //             return\n        //         break;\n\n        //         default:\n        //         break;\n        //     }\n        // })\n\n        const searchBar =    <Dialog \n                                open={isOpen} \n                                onClose={ () => { this.closeSearch() } } \n                                aria-labelledby=\"form-dialog-title\"\n                                >\n                                <DialogContent>\n                                <TextField\n                                    autoFocus\n                                    margin=\"dense\"\n                                    id=\"title\"\n                                    label=\"Search for some media\"\n                                    type=\"text\"\n                                    onChange={ this.handleSearchChange }\n                                    value={searchValue}\n                                    fullWidth\n                                />\n                                {/* Add some media for autocomplete form use searchBarResults */}\n                                </DialogContent>\n                                {/* <Menu\n                                    keepMounted\n                                    open={isOpen}\n                                    onClose={this.closeSearch}\n                                    // anchorEl={event.currentTarget}\n                                >\n                                    <MenuItem onClick={ () => { this.closeSearch() } }>Profile</MenuItem>\n                                    <MenuItem onClick={ () => { this.closeSearch() } }>My account</MenuItem>\n                                    <MenuItem onClick={ () => { this.closeSearch() } }>Logout</MenuItem>\n                                </Menu> */}\n                            </Dialog>\n                                    \n    \n        return(\n            <div className = 'fabloc'>\n               <Fab className='fab' onClick = { () => { this.openSearch() }}>\n                <i className=\"material-icons\">\n                    search\n                </i>\n               </Fab>\n\n                { searchBar }\n\n            </div>\n\n        );\n    }\n}\nconst mapStateToProps = state => {\n    const isOpen = state.search_Model.isOpen;\n    const searchValue = state.search_Model.searchValue;\n    const searchBarResults = state.search_Model.searchBarResults\n\n        return{ isOpen, searchValue, searchBarResults };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        searchModalOpen:(data) => dispatch( searchModalOpen(data)),\n        searchModalClose:(data) => dispatch( searchModalClose(data)),\n        updateSearchValue:(data) => dispatch( updateSearchValue(data))\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps )(SearchFab))"]},"metadata":{},"sourceType":"module"}